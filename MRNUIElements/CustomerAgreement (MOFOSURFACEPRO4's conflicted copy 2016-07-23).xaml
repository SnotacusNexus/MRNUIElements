<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:MRNUIElements"
	  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:MRNNexus_Model="clr-namespace:MRNNexus_Model;assembly=MRNNexus_Model" x:Class="MRNUIElements.CustomerAgreement"
      mc:Ignorable="d" 
	  Width="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}" Height="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}"
   
     
      Title="CustomerAgreement">


	<Page.Resources>

		<SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />
		<Style xmlns:sys="clr-namespace:System;assembly=mscorlib" x:Key="PromptingTextBox" TargetType="{x:Type TextBox}">
			<Style.Resources>
				<VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
					<VisualBrush.Visual>

						<Label Content="Duh" Foreground="{StaticResource brushWatermarkForeground}" />
					</VisualBrush.Visual>
				</VisualBrush>
			</Style.Resources>
			<Style.Triggers>

				<Trigger Property="Text" Value="{x:Static sys:String.Empty}">
					<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
				</Trigger>
				<Trigger Property="Text" Value="{x:Null}">
					<Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
				</Trigger>
				<Trigger Property="IsKeyboardFocused" Value="True">
					<Setter Property="Background" Value="White" />
				</Trigger>
			</Style.Triggers>
		</Style>


		<SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />

		<SolidColorBrush x:Key="brushWatermarkBorder" Color="Indigo" />
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<local:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" />
		<Style x:Key="EntryFieldStyle" TargetType="{x:Type Grid}" >
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Margin" Value="0" />
		</Style>

		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="Transparent" Offset="0.0"/>
			<GradientStop Color="Transparent" Offset="1.0"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="TabItem.Static.Border" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="Lime" Offset="0.0"/>
			<GradientStop Color="Yellow" Offset="1.0"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="HotPink" Offset="0.0"/>
			<GradientStop Color="Green" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="Yellow"/>
		<SolidColorBrush x:Key="TabItem.Disabled.Background" Color="DarkGray"/>
		<SolidColorBrush x:Key="TabItem.Disabled.Border" Color="Black"/>
		<LinearGradientBrush x:Key="TabItem.Selected.Border" StartPoint="0,0" EndPoint="0,1">
			<GradientStop Color="Yellow" Offset="0.0"/>
			<GradientStop Color="LimeGreen" Offset="1.0"/>
		</LinearGradientBrush>

		<RadialGradientBrush x:Key="TabItem.Selected.Background">
			<GradientStop Color="Black" Offset="0.0"/>
			<GradientStop Color="Red" Offset="1.0"/>
		</RadialGradientBrush>

		<Style TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="6,2,6,2"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
							<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
								<Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
							</Border>
							<ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
								<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
								<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
								<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
								<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Panel.ZIndex" Value="1"/>
								<Setter Property="Margin" Value="-2,-2,0,-2"/>
								<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Panel.ZIndex" Value="1"/>
								<Setter Property="Margin" Value="-2,0,-2,-2"/>
								<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Panel.ZIndex" Value="1"/>
								<Setter Property="Margin" Value="0,-2,-2,-2"/>
								<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Panel.ZIndex" Value="1"/>
								<Setter Property="Margin" Value="-2,-2,-2,0"/>
								<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
								<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
								<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
							</MultiDataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<CollectionViewSource x:Key="dTO_CustomerViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Customer}, CreateList=True}"/>
		<CollectionViewSource x:Key="dTO_ClaimStatusViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_ClaimStatus}, CreateList=True}"/>
		<CollectionViewSource x:Key="dTO_EmployeeViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Employee}, CreateList=True}"/>
		<CollectionViewSource x:Key="dTO_AddressViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Address}, CreateList=True}"/>
		<CollectionViewSource x:Key="dTO_InsuranceCompanyViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_InsuranceCompany}, CreateList=True}"/>
	</Page.Resources>
	<Page.Background>
		<StaticResource ResourceKey="BackgroundGradient"/>
	</Page.Background>
	<StackPanel>
		<Grid MinWidth="400" MinHeight="400" HorizontalAlignment="Center" VerticalAlignment="Center" DataContext="{StaticResource dTO_InsuranceCompanyViewSource}">
			<TabControl x:Name="CustomeerAgreement" TabStripPlacement="Top"  Background="Transparent" MinWidth="300"   MinHeight="400" Margin="0,10,20,0" Height="400" VerticalAlignment="Top" SelectedIndex="{Binding Mode=OneWay}" >
				<TabItem x:Name="Lead_Generation" Header="Lead Generation">
					<TabPanel HorizontalAlignment="Center" VerticalAlignment="Top">

						<StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="15,0,15,0">
							<TextBlock FontSize="25" FontWeight="Bold" TextAlignment="Center" Padding="10" ><Run Text="Section 1"/><LineBreak/><Run Text="Lead Generation"/><LineBreak/><Run Text="Interview"/></TextBlock>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="15,0,15,0">
								<DatePicker x:Name="ContractDate" HorizontalAlignment="Right"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,5,15,5" DataContext="{StaticResource dTO_EmployeeViewSource}">
								<xctk:WatermarkTextBox Watermark="First Name"  x:Name="FirstName" Height="23" TextWrapping="Wrap"  Width="80" Text="{Binding FirstName}"/>

								<xctk:WatermarkTextBox Watermark="Middle Name" x:Name="MiddleName" Height="23" TextWrapping="Wrap"  Width="80"/>

								<xctk:WatermarkTextBox Watermark="Last Name" x:Name="Lastname" Height="23" TextWrapping="Wrap"  Width="90" Text="{Binding LastName}"/>
								<xctk:WatermarkTextBox Watermark="Suffix" x:Name="suffix" Height="23" TextWrapping="Wrap" Width="40" Text="{Binding Suffix}"/>
							</StackPanel>
							<StackPanel x:Name="stackPanel" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,5,15,5" DataContext="{StaticResource dTO_AddressViewSource}">
								<xctk:WatermarkTextBox Watermark="Address" x:Name="Address" Height="23" TextWrapping="Wrap"  Width="{Binding ActualWidth, ElementName=stackPanel}" Text="{Binding Address}" />
							</StackPanel>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,5,15,5" DataContext="{StaticResource dTO_AddressViewSource}">

								<TextBox x:Name="City" Height="23" TextWrapping="Wrap" Text="City" Width="120" IsEnabled="False"/>
								<TextBox x:Name="State" Height="23" TextWrapping="Wrap" Text="State" Width="120" IsEnabled="False"/>
								<xctk:WatermarkTextBox Watermark="Zipcode" x:Name="Zipcode" Height="23" TextWrapping="Wrap" Width="50" Text="{Binding Zip}"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,0,15,0" DataContext="{StaticResource dTO_EmployeeViewSource}">
								<xctk:WatermarkTextBox Watermark="Primary Phone" x:Name="Primary_Phone" Width="125" Height="23" MinWidth="100" HorizontalAlignment="Stretch" TextWrapping="Wrap" Padding="0" Margin="10,5,15,5" Text="{Binding CellPhone}"/>
								<xctk:WatermarkTextBox Watermark="Secondary Phone" x:Name="Secondary_Phone" MinWidth="100" HorizontalAlignment="Stretch" TextWrapping="Wrap" Width="125" Height="23"  Margin="10,5,15,5"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,0,15,0" DataContext="{StaticResource dTO_EmployeeViewSource}">
								<xctk:WatermarkTextBox Watermark="Enter First Name" x:Name="Email_Address" Height="23" TextWrapping="Wrap" Width="{Binding ActualWidth, ElementName=stackPanel}" HorizontalAlignment="Stretch" Text="{Binding Email}"/>
							</StackPanel>

						</StackPanel>

					</TabPanel>
				</TabItem>


				<TabItem x:Name="Customer_Info" Header="Customer Information">
					<TabPanel HorizontalAlignment="Center" VerticalAlignment="Top">
						<Grid>
							<StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="15,0,15,0">
								<TextBlock FontSize="25" FontWeight="Bold" TextAlignment="Center" Padding="10" ><Run Text="Section 2"/><LineBreak/><Run Text="Client Pre-Inspection"/><LineBreak/><Run Text="Interview"/></TextBlock>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="15,0,15,0" DataContext="{StaticResource dTO_ClaimStatusViewSource}">
									<DatePicker x:Name="ContractDate1" HorizontalAlignment="Right" SelectedDate="{Binding ClaimStatusDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
								</StackPanel>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,5,15,5" DataContext="{StaticResource dTO_CustomerViewSource}">
									<xctk:WatermarkTextBox Watermark="First Name" x:Name="FirstName1" Height="23" TextWrapping="Wrap"  Width="80" Text="{Binding FirstName}"/>
									<xctk:WatermarkTextBox Watermark="Middle Name" x:Name="MiddleName1" Height="23" TextWrapping="Wrap"  Width="80" Text="{Binding MiddleName}"/>
									<xctk:WatermarkTextBox Watermark="Last Name" x:Name="LastName1" Height="23" TextWrapping="Wrap"  Width="90" Text="{Binding LastName}"/>
									<xctk:WatermarkTextBox Watermark="Suffix" x:Name="Suffix1" Height="23" TextWrapping="Wrap"  Width="40" Text="{Binding Suffix}"/>
								</StackPanel>

								<StackPanel x:Name="stackPanel1" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,5,15,5" DataContext="{StaticResource dTO_AddressViewSource}">
									<xctk:WatermarkTextBox Watermark="Address" x:Name="Address1" Height="23" TextWrapping="Wrap"  Width="{Binding ActualWidth, ElementName=stackPanel1}" Text="{Binding Address}" />
								</StackPanel>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,5,15,5" DataContext="{StaticResource dTO_AddressViewSource}">

									<TextBox x:Name="City1" Height="23" TextWrapping="Wrap" Text="City" Width="120" IsEnabled="False"/>
									<TextBox x:Name="State1" Height="23" TextWrapping="Wrap" Text="State" Width="120" IsEnabled="False"/>
									<xctk:WatermarkTextBox Watermark="Zipcode" x:Name="Zipcode1" Height="23" TextWrapping="Wrap"  Width="50" Text="{Binding Zip}"/>
								</StackPanel>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,0,15,0" DataContext="{StaticResource dTO_CustomerViewSource}">
									<xctk:WatermarkTextBox Watermark="Primary Phone" x:Name="Primary_Phone1" Width="125" Height="23" MinWidth="100" HorizontalAlignment="Stretch" TextWrapping="Wrap"  Padding="0" Margin="10,5,15,5" Text="{Binding PrimaryNumber}"/>
									<xctk:WatermarkTextBox Watermark="Secondary Phone" x:Name="Secondary_Phone1" MinWidth="100" HorizontalAlignment="Stretch"  Width="125" Height="23"  Margin="10,5,15,5" Text="{Binding SecondaryNumber}"/>
								</StackPanel>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="15,0,15,0" DataContext="{StaticResource dTO_CustomerViewSource}">
									<xctk:WatermarkTextBox Watermark="Email Address" x:Name="Email_Address1" Height="23" TextWrapping="Wrap"   Width="{Binding ActualWidth, ElementName=stackPanel1}" HorizontalAlignment="Stretch" Text="{Binding Email}"/>
								</StackPanel>
							</StackPanel>
						</Grid>

					</TabPanel>

				</TabItem>

				<TabItem x:Name="Insurance"  Header="Insurance / Mortgage">
					<TabPanel HorizontalAlignment="Center">
						<Grid Background="Transparent" Margin="0,6,0,-148" Width="688">
							<TextBlock FontSize="25" FontWeight="Bold" TextAlignment="Center" Padding="10" Margin="0,0,-43,0" VerticalAlignment="Top" ><Run Text="Section 3"/><LineBreak/><Run Text=" Insurance &amp; Mortgage Company"/><LineBreak/><Run Text="Information"/></TextBlock>
							<ComboBox x:Name="InsuranceLU" Width="100" Height="20" Background="{x:Null}" Foreground="White" IsReadOnly="True" Margin="146,144,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" d:LayoutOverrides="Height"/>
							<Label x:Name="label" Content="Insurance Carrier:" HorizontalAlignment="Left" Margin="40,138,0,0" VerticalAlignment="Top" Foreground="White"/>
							<Label x:Name="label_Copy" Content="Mortgage Holder:" HorizontalAlignment="Left" Margin="54,0,0,91" Foreground="White" VerticalAlignment="Bottom"/>
							<TextBox x:Name="InsPolicyNumber" Margin="0,138,127,0" TextWrapping="Wrap" Height="23" VerticalAlignment="Top" Background="{x:Null}" Foreground="White" HorizontalAlignment="Right" Width="146"/>
							<TextBox x:Name="Policy_Comments" Margin="0,0,45,91" TextWrapping="Wrap" Background="{x:Null}" Foreground="White" HorizontalAlignment="Right" Width="228" Height="89" VerticalAlignment="Bottom"/>
							<TextBox x:Name="MortgageAcctNumber" Margin="260,0,258,56" TextWrapping="Wrap" Height="22" VerticalAlignment="Bottom" Foreground="White" Background="{x:Null}"/>
							<TextBox x:Name="ClaimsPhoneNumber" Margin="68,194,0,0" TextWrapping="Wrap" Background="{x:Null}" Foreground="White" HorizontalAlignment="Left" Width="146" Height="28" VerticalAlignment="Top"/>
							<Label x:Name="label_Copy2" Content="Mortgage Account #:" Margin="122,0,0,56" Foreground="White" HorizontalAlignment="Left" Width="132"  VerticalAlignment="Bottom"/>
							<TextBox x:Name="MorgageHolder" Margin="164,0,0,86" TextWrapping="Wrap" Background="{x:Null}" Foreground="White" HorizontalAlignment="Left" Width="146" Height="29" VerticalAlignment="Bottom" d:LayoutOverrides="VerticalAlignment"/>
							<Label x:Name="label_Copy3" Content="Claims Phone Number:" Margin="68,169,0,0" VerticalAlignment="Top" Foreground="White" HorizontalAlignment="Left"/>
							<Label x:Name="label_Copy1" Content="Policy Number:" Margin="308,134,278,0" VerticalAlignment="Top" Foreground="White" d:LayoutOverrides="Width"/>
							<Label x:Name="label_Copy4" Content="Comments:" Margin="308,178,278,0" Foreground="White" d:LayoutOverrides="Width" Height="32" VerticalAlignment="Top"/>
						</Grid>
					</TabPanel>
				</TabItem>

				<TabItem x:Name="Site_Survey"  Header="Site Survey">

					<TabPanel HorizontalAlignment="Center" VerticalAlignment="Top">

						<Grid Height="372" Width="674">
							<TextBlock FontSize="25" FontWeight="Bold" TextAlignment="Center" Padding="0" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Top" ><Run Text="Section 4"/><LineBreak/><Run Text=" Site Survey"/></TextBlock>
							<Button x:Name="Roof_Inspection" Content="Roof Inspection" HorizontalAlignment="Center" Margin="-300,-100,0,0" Style="{DynamicResource normal}" VerticalAlignment="Center" Click="Roof_Inspection_Click"/>
							<Button x:Name="Gutter_Inspection" Content="Gutter Inspection" HorizontalAlignment="Center" Margin="-300,0,0,-100" Style="{DynamicResource normal}" VerticalAlignment="Center" Click="Gutter_Inspection_Click"/>
							<Button x:Name="Interior_Inspection" Content="Interior Inspection" HorizontalAlignment="Center" Margin="0,0,-300,-100" Style="{DynamicResource normal}" VerticalAlignment="Center" Click="Interior_Inspection_Click"/>
							<Button x:Name="Exterior_Inspection" Content="Exterior Inspection" HorizontalAlignment="Center" Margin="0,-100,-300,0" Style="{DynamicResource normal}" VerticalAlignment="Center" Click="Exterior_Inspection_Click"/>
							<Button x:Name="Edit_Inspection" Content="Edit Inspection" HorizontalAlignment="Center" Margin="223.5,168" Style="{DynamicResource normal}" VerticalAlignment="Center" Click="Edit_Inspection_Click"/>
						</Grid>

					</TabPanel>
				</TabItem>


				<TabItem x:Name="Damage_Assessment"  Header="Damage Assessment">

					<TabPanel HorizontalAlignment="Center" VerticalAlignment="Top">
						<Grid Background="Transparent">
							<TextBlock FontSize="25" FontWeight="Bold" TextAlignment="Center" Padding="10" ><Run Text="Section 5"/><LineBreak/><Run Text="Damage Assessment"/><LineBreak/><Run Text="Information"/></TextBlock>
						</Grid>

					</TabPanel>
				</TabItem>


				<TabItem x:Name="Claim_Process"  Header="Start Claim Process">
					<TabPanel HorizontalAlignment="Center" VerticalAlignment="Top">
						<Grid Background="Transparent">
							<TextBlock FontSize="25" FontWeight="Bold" TextAlignment="Center" Padding="10" ><Run Text="Section 6"/><LineBreak/><Run Text="The Claims Process"/><LineBreak/><Run Text="Whats Next"/></TextBlock>
						</Grid>
					</TabPanel>
				</TabItem>
				<TabItem x:Name="Project_At_Hand"  Header="Project At Hand" Height="21.96" VerticalAlignment="Bottom">
					<TabPanel HorizontalAlignment="Center" VerticalAlignment="Top">
						<Grid Background="Transparent">
							<TextBlock FontSize="25" FontWeight="Bold" TextAlignment="Center" Padding="10" ><Run Text="Section 7"/><LineBreak/><Run Text="The New Roof"/><LineBreak/><Run Text="What Can You Expect and When?"/></TextBlock>
						</Grid>
					</TabPanel>
				</TabItem>
				<TabItem x:Name="Upgrades"  Header="Upgrades &amp; Add-ons">
					<TabPanel HorizontalAlignment="Center" VerticalAlignment="Top">
						<Grid Width ="900" Height="400" Background="Transparent">
							<TextBlock FontSize="25" FontWeight="Bold" TextAlignment="Center" Padding="10" Margin="10,0,-10,30" ><Run Text="Section 8"/><LineBreak/><Run Text="Feature Option Upgrades"/><LineBreak/><Run Text="and Add-Ons"/></TextBlock>
						</Grid>
					</TabPanel>
				</TabItem>
				<TabItem x:Name="Finalize_Agreement"  Header="Finalize Agreement" >
					<TabPanel HorizontalAlignment="Center" VerticalAlignment="Top">
						<Grid Height="373" Width="896" >
							<TextBlock FontSize="25" FontWeight="Bold" TextAlignment="Center" Padding="10" Margin="0,0,0,245" ><Run Text="Section 9"/><LineBreak/><Run Text="Finalizing Our Agreement"/><LineBreak/><Run Text="What To Expect Next"/></TextBlock>




							<Canvas Name="paintSurface" MouseDown="Canvas_MouseDown_1" MouseMove="Canvas_MouseMove_1" Margin="234,288,197,35" >
								<Canvas.Background>
									<SolidColorBrush Color="White" Opacity="100"/>
								</Canvas.Background>
							</Canvas>
							<Canvas Name="paintSurface1" MouseDown="Canvas_MouseDown_2" MouseMove="Canvas_MouseMove_2" Margin="234,213,197,110" >
								<Canvas.Background>
									<SolidColorBrush Color="White" Opacity="100"/>
								</Canvas.Background>
							</Canvas>
						</Grid>

					</TabPanel>

				</TabItem>


			</TabControl>
		</Grid>


		<StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Margin="0"  HorizontalAlignment="Center">
			<Button x:Name="PrevStepButton" Content="Previous" Style="{StaticResource normal}" Click="PrevStep" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
			<Button x:Name="HomeButton" Content="Home" Style="{StaticResource normal}" Click="Home" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
			<Button x:Name="NextButton" Content="Next" Style="{StaticResource normal}" Click="NextStep" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
		</StackPanel>
		<ProgressBar Height="39.077" Margin="0" MinWidth="300" MinHeight="20" HorizontalAlignment="Center" SmallChange="0" VerticalAlignment="Bottom" />
	</StackPanel>


</Page>
