<Page x:Class="MRNUIElements.ScopeViewer"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:MRNNexus_Model="clr-namespace:MRNNexus_Model;assembly=MRNNexus_Model"
      xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:MRNUIElements"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      Title="Scope Viewer"
      Width="498"
      Height="640.75"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      mc:Ignorable="d">

    <Page.Resources>
        <CollectionViewSource x:Key="dTO_ScopeTypeSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_LU_ScopeType}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_ScopeViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Scope}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_ClaimStatusViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_ClaimStatus}, CreateList=True}" />
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFF0F0F0" />
            <GradientStop Offset="1.0" Color="#FFE5E5E5" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFECF4FC" />
            <GradientStop Offset="1.0" Color="#FFDCECFC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFEBF4FC" />
            <GradientStop Offset="1.0" Color="#FFDCECFC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFDAECFC" />
            <GradientStop Offset="1.0" Color="#FFC4E0FC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFDAEBFC" />
            <GradientStop Offset="1.0" Color="#FFC4E0FC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot"
                                Background="Transparent"
                                BorderBrush="{StaticResource ComboBox.Static.Border}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                    Margin="0"
                                    HorizontalAlignment="Right"
                                    BorderBrush="Transparent"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="true">
                                <Path x:Name="arrow"
                                      Margin="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                      Fill="{DynamicResource ReverseBackgroundGradient}" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
                       Grid.ColumnSpan="2"
                       Margin="1"
                       AllowsTransparency="true"
                       IsOpen="{Binding IsDropDownOpen,
                                        Mode=TwoWay,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Themes:SystemDropShadowChrome x:Name="shadow"
                                                   MinWidth="{Binding ActualWidth,
                                                                      ElementName=templateRoot}"
                                                   MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                   Color="Transparent">
                        <Border x:Name="dropDownBorder"
                                Background="#FF4B4B4B"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer" Background="#FF252323">
                                <Grid x:Name="grid"
                                      Background="#FF1D1B1B"
                                      RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas"
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Background="#FF0E0D0D">
                                        <Rectangle x:Name="opaqueRect"
                                                   Width="{Binding ActualWidth,
                                                                   ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight,
                                                                    ElementName=dropDownBorder}"
                                                   Fill="{Binding Background,
                                                                  ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton"
                              Grid.ColumnSpan="2"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              IsChecked="{Binding IsDropDownOpen,
                                                  Mode=TwoWay,
                                                  RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}" />
                <ContentPresenter x:Name="contentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                  IsHitTestVisible="false"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="Color" Value="#71000000" />
                    <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Background="Transparent"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
                       Grid.ColumnSpan="2"
                       AllowsTransparency="true"
                       IsOpen="{Binding IsDropDownOpen,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Themes:SystemDropShadowChrome x:Name="shadow"
                                                   MinWidth="{Binding ActualWidth,
                                                                      ElementName=templateRoot}"
                                                   MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                   Color="Transparent">
                        <Border x:Name="dropDownBorder"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas"
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                        <Rectangle x:Name="opaqueRect"
                                                   Width="{Binding ActualWidth,
                                                                   ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight,
                                                                    ElementName=dropDownBorder}"
                                                   Fill="{Binding Background,
                                                                  ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton"
                              Grid.ColumnSpan="2"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              IsChecked="{Binding IsDropDownOpen,
                                                  Mode=TwoWay,
                                                  RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}" />
                <Border x:Name="border"
                        Margin="{TemplateBinding BorderThickness}"
                        Background="{StaticResource TextBox.Static.Background}">
                    <TextBox x:Name="PART_EditableTextBox"
                             Margin="{TemplateBinding Padding}"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                             IsReadOnly="{Binding IsReadOnly,
                                                  RelativeSource={RelativeSource TemplatedParent}}"
                             Style="{StaticResource ComboBoxEditableTextBox}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="border" Property="Opacity" Value="0.56" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="Color" Value="#71000000" />
                    <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>



    </Page.Resources>

    <Grid x:Name="ralph"
          Width="454"
          Height="550"
          MinWidth="3"
          Margin="0"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          DataContext="{StaticResource dTO_ScopeViewSource}">
        <Grid.RowDefinitions>
            <RowDefinition />
        </Grid.RowDefinitions>
        <TextBox x:Name="ACV"
                 Width="120"
                 Height="22"
                 Margin="274,421,0,0"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Top"
                 Background="{x:Null}"
                 Foreground="White"
                 Text="0"
                 TextWrapping="Wrap" />
        <TextBox x:Name="Roof"
                 Width="120"
                 Height="23"
                 Margin="274,363,0,0"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Top"
                 Background="{x:Null}"
                 Foreground="White"
                 LostFocus="Roof_LostFocus"
                 Text="{Binding RoofAmount,
                                Mode=TwoWay,
                                NotifyOnValidationError=true,
                                ValidatesOnExceptions=true}"
                 TextChanged="Roof_TextChanged"
                 TextWrapping="Wrap" />
        <TextBox x:Name="Depreciation"
                 Width="122"
                 Height="23"
                 Margin="273,392,0,0"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Top"
                 Background="{x:Null}"
                 Foreground="White"
                 Text="0"
                 TextWrapping="Wrap" />
        <StackPanel VerticalAlignment="Top">
            <TextBlock x:Name="textBlock"
                       Width="126"
                       Margin="0"
                       HorizontalAlignment="Center"
                       Style="{StaticResource normal}"
                       Text="Scope Entry"
                       TextWrapping="Wrap" />
        </StackPanel>
        <Button x:Name="SubmitScopeEntry"
                Width="75"
                Margin="61,425,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="{x:Null}"
                Click="SubmitScopeEntry_Click"
                Content="_Submit"
                IsDefault="True"
                IsEnabled="False"
                Style="{DynamicResource normal}" />
        <Button x:Name="CancelScopeEntry"
                Width="75"
                Margin="61,384,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Click="CancelScopeEntry_Click"
                Content="_Cancel"
                IsCancel="True"
                Style="{DynamicResource normal}" />
        <Grid x:Name="grid1"
              Margin="198,111,0,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              DataContext="{DynamicResource dTO_ScopeViewSource}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBox x:Name="ScopeTypeTextBox"
                      Grid.Row="0"
                      Width="120"
                      Height="Auto"
                      Margin="-33,-71,0,83"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Background="Transparent"
                     Foreground="White" Grid.ColumnSpan="2"
                      />

            <Label Grid.Row="0"
                   Grid.Column="0"
                   Margin="3"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Content="Claim #:"
                   Foreground="White" />
            <TextBox x:Name="claimIDTextBox"
                     Grid.Row="0"
                     Grid.Column="1"
                     Width="120"
                     Height="Auto"
                     Margin="3,5,0,5"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center"
                     Background="Transparent"
                     Foreground="White" />
            <Label Grid.Row="1"
                   Grid.Column="0"
                   Margin="3"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Content="RCV:"
                   Foreground="White" />
            <TextBox x:Name="totalTextBox"
                     Grid.Row="1"
                     Grid.Column="1"
                     Width="120"
                     Height="23"
                     Margin="3"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center"
                     Background="{x:Null}"
                     Foreground="White"
                     GotFocus="totalTextBox_GotFocus"
                     LostFocus="totalTextBox_LostFocus"
                     Text="{Binding Total,
                                    Mode=TwoWay,
                                    NotifyOnValidationError=true,
                                    ValidatesOnExceptions=true}"
                     TextChanged="totalTextBox_TextChanged" />
            <Label Grid.Row="2"
                   Grid.Column="0"
                   Margin="3"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Content="Exterior:"
                   Foreground="White" />
            <TextBox x:Name="exteriorTextBox"
                     Grid.Row="2"
                     Grid.Column="1"
                     Width="120"
                     Height="23"
                     Margin="3,4,0,5"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center"
                     Background="{x:Null}"
                     Foreground="White"
                     LostFocus="exteriorTextBox_LostFocus"
                     Text="{Binding Exterior,
                                    Mode=TwoWay,
                                    NotifyOnValidationError=true,
                                    ValidatesOnExceptions=true}"
                     TextChanged="exteriorTextBox_TextChanged" />
            <Label Grid.Row="3"
                   Grid.Column="0"
                   Margin="3"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Content="Gutter:"
                   Foreground="White" />
            <TextBox x:Name="gutterTextBox"
                     Grid.Row="3"
                     Grid.Column="1"
                     Width="120"
                     Height="23"
                     Margin="3,4,0,5"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center"
                     Background="{x:Null}"
                     Foreground="White"
                     LostFocus="gutterTextBox_LostFocus"
                     Text="{Binding Gutter,
                                    Mode=TwoWay,
                                    NotifyOnValidationError=true,
                                    ValidatesOnExceptions=true}"
                     TextChanged="gutterTextBox_TextChanged" />
            <Label Grid.Row="4"
                   Grid.Column="0"
                   Margin="3"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Content="Interior:"
                   Foreground="White" />
            <TextBox x:Name="interiorTextBox"
                     Grid.Row="4"
                     Grid.Column="1"
                     Width="120"
                     Height="23"
                     Margin="3,4,0,5"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center"
                     Background="{x:Null}"
                     Foreground="White"
                     LostFocus="interiorTextBox_LostFocus"
                     Text="{Binding Interior,
                                    Mode=TwoWay,
                                    NotifyOnValidationError=true,
                                    ValidatesOnExceptions=true}"
                     TextChanged="interiorTextBox_TextChanged" />
            <Label Grid.Row="5"
                   Grid.Column="0"
                   Margin="3"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Content="O and P:"
                   Foreground="White" />
            <TextBox x:Name="oandPTextBox"
                     Grid.Row="5"
                     Grid.Column="1"
                     Width="120"
                     Height="23"
                     Margin="3,3,0,6"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center"
                     Background="{x:Null}"
                     Foreground="White"
                     LostFocus="oandPTextBox_LostFocus"
                     Text="{Binding OandP,
                                    Mode=TwoWay,
                                    NotifyOnValidationError=true,
                                    ValidatesOnExceptions=true}"
                     TextChanged="oandPTextBox_TextChanged" />
            <Label Grid.Row="7"
                   Grid.Column="0"
                   Margin="3"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Content="Tax:"
                   Foreground="White" />
            <TextBox x:Name="deductibleTextBox"
                     Grid.Row="7"
                     Grid.RowSpan="2"
                     Grid.Column="1"
                     Width="120"
                     Height="23"
                     Margin="3,0,0,10"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Bottom"
                     Background="{x:Null}"
                     Foreground="White"
                     LostFocus="deductibleTextBox_LostFocus"
                     Text="{Binding Deductible,
                                    Mode=TwoWay,
                                    NotifyOnValidationError=true,
                                    ValidatesOnExceptions=true}"
                     TextChanged="deductibleTextBox_TextChanged" />
            <TextBox x:Name="taxTextBox"
                     Grid.Row="7"
                     Grid.Column="1"
                     Width="120"
                     Height="23"
                     Margin="3,2,0,7"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center"
                     Background="{x:Null}"
                     Foreground="White"
                     LostFocus="taxTextBox_LostFocus"
                     Text="{Binding Tax,
                                    Mode=TwoWay,
                                    NotifyOnValidationError=true,
                                    ValidatesOnExceptions=true}"
                     TextChanged="taxTextBox_TextChanged" />

            <Label Grid.Row="8"
                   Grid.Column="0"
                   Margin="3,0,0,6"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Content="Deductible:"
                   Foreground="White" />
        </Grid>
        <Canvas x:Name="MRNEstimateStatusImage"
                Width="32"
                Height="32"
                Margin="143,141,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top" />
        <Canvas x:Name="OldScopeStatusImage"
                Width="32"
                Height="32"
                Margin="142,178,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top" />
        <Canvas x:Name="NewScopeStatusImage"
                Width="32"
                Height="32"
                Margin="142,221,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top" />
        <Button x:Name="ShapePickerBtn"
                Width="154"
                Margin="0,0,48,28"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Click="ShapePickerBtn_Click"
                Content="Shape Picker"
                Style="{DynamicResource normal}" Visibility="Collapsed" />
        <Label Grid.Column="0"
               Margin="202,363,0,161"
               HorizontalAlignment="Left"
               VerticalAlignment="Center"
               Content="Roof:"
               Foreground="White" />
        <Label Grid.Column="0"
               Margin="195,389,0,135"
               HorizontalAlignment="Left"
               VerticalAlignment="Center"
               Content="Depreciation:"
               Foreground="White" />
        <Label Grid.Column="0"
               Margin="200,417,0,107"
               HorizontalAlignment="Left"
               VerticalAlignment="Center"
               Content="ACV"
               Foreground="White" />

    </Grid>
</Page>
