<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:MRNNexus_Model="clr-namespace:MRNNexus_Model;assembly=MRNNexus_Model"
      xmlns:System="clr-namespace:System;assembly=mscorlib"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:MRNUIElements"
        xmlns:converters="clr-namespace:MRNUIElements.Utility"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
  xmlns:dom="clr-namespace:MRNUIElements.DataObjectModels"
      xmlns:Generic="clr-namespace:System.Collections.Generic;assembly=mscorlib" 
      x:Class="MRNUIElements.CustomerAgreement"
      Title="CustomerAgreement"
      Width="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}"
      Height="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}"
      mc:Ignorable="d">


    <Page.Resources>
        <converters:ClaimContactsConverter x:Key="CCC"/>
        <converters:BitmapImageConverter x:Key="Image"/>
        <dom:Lead x:Key="_Lead"/>
        <dom:Customer x:Key="_Customer"/>
        <dom:ClaimStatus x:Key="_ClaimStatus"/>
        <dom:Employee x:Key="_Employee"/>
        <dom:Address x:Key="_Address"/>
        <dom:InsuranceCompany x:Key="_InsuranceCompany"/>
        <dom:ClaimContacts x:Key="_ClaimContacts"/>

        <dom:Referrer x:Key="_Referrer"/>
        <dom:Scope x:Key="_Scope"/>
        <dom:CallLog x:Key="_CallLog"/>
        <dom:CalendarData x:Key="_CalendarData"/>
        <dom:Invoice x:Key="_Invoice"/>

        <dom:ClaimDocument x:Key="_ClaimDocument"/>
        <dom:Adjustment x:Key="_Adjustment"/>
        <dom:Adjuster x:Key="_Adjuster"/>
        <dom:Inspection x:Key="_Inspection"/>
        <dom:Payment x:Key="_Payment"/>
        <dom:Plane x:Key="_Plane"/>
        <dom:NewRoof x:Key="_NewRoof"/>
        <dom:OrderItem x:Key="_OrderItem"/>
        <dom:Order x:Key="_Order"/>
        <local:ImageGallary x:Key="ImageList"/>
        <dom:ListOfClaimDocuments x:Key="LOCD"/>
        <CollectionViewSource x:Key="dTO_CustomerViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Customer}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_ClaimStatusViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_ClaimStatus}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_EmployeeViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Employee}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_AddressViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Address}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_InsuranceCompanyViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_InsuranceCompany}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_ClaimContactsViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_ClaimContacts}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_LU_LeadTypeViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_LU_LeadType}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_ReferrerViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Referrer}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_ScopeViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Scope}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_ClaimViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Claim}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_CallLogViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_CallLog}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_CalendarDataViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_CalendarData}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_InvoiceViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Invoice}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_LU_AdjustmentResultViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_LU_AdjustmentResult}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_ClaimDocumentViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_ClaimDocument}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_AdjustmentViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Adjustment}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_AdjusterViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Adjuster}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_InspectionViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Inspection}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_PaymentViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Payment}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_PlaneViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Plane}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_NewRoofViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_NewRoof}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_OrderItemViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_OrderItem}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_OrderViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Order}, CreateList=True}"/>
        <CollectionViewSource x:Key="dTO_LeadViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Lead}, CreateList=True}"/>
        <SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />
        <Style xmlns:sys="clr-namespace:System;assembly=mscorlib"
               x:Key="PromptingTextBox"
               TargetType="{x:Type TextBox}">
            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrush"
                             AlignmentX="Left"
                             AlignmentY="Center"
                             Stretch="None">
                    <VisualBrush.Visual>

                        <Label Content="Duh" Foreground="{StaticResource brushWatermarkForeground}" />
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>
            <Style.Triggers>

                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />

        <SolidColorBrush x:Key="brushWatermarkBorder" Color="Indigo" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style x:Key="EntryFieldStyle" TargetType="{x:Type Grid}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="TabItem.Static.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="Transparent" />
            <GradientStop Offset="1.0" Color="Transparent" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TabItem.Static.Border" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="Lime" />
            <GradientStop Offset="1.0" Color="Yellow" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="HotPink" />
            <GradientStop Offset="1.0" Color="Green" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="Yellow" />
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="DarkGray" />
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="Black" />
        <LinearGradientBrush x:Key="TabItem.Selected.Border" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="Yellow" />
            <GradientStop Offset="1.0" Color="LimeGreen" />
        </LinearGradientBrush>

        <RadialGradientBrush x:Key="TabItem.Selected.Background">
            <GradientStop Offset="0.0" Color="Black" />
            <GradientStop Offset="1.0" Color="Red" />
        </RadialGradientBrush>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="6,2,6,2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder"
                                    Margin="0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,1,1,0">
                                <Border x:Name="innerBorder"
                                        Margin="-1"
                                        Background="{StaticResource TabItem.Selected.Background}"
                                        BorderBrush="{StaticResource TabItem.Selected.Border}"
                                        BorderThickness="1,1,1,0"
                                        Opacity="0" />
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              ContentSource="Header"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,0,-2" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                                <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,0,-2,-2" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                                <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="0,-2,-2,-2" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                                <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,-2,0" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>


        <converters:BitmapImageConverter x:Key="BIC"/>

    </Page.Resources>

    <Grid>

        <TabControl x:Name="CustomeerAgreement"
                        Height="993"
                        MinWidth="300"
                        MinHeight="400"
                        Margin="0,175,0,0"
                        VerticalAlignment="Top"
                        Background="#FFE0EBE3"
                        Foreground="White"
                        HorizontalAlignment="Left"
                        TabStripPlacement="Top" 
                        Panel.ZIndex="10" 
                        Width="2565" 
                        Loaded="CustomeerAgreement_Loaded">

            <TabItem x:Name="CustomerInfoTab" Header="Customer Information" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Background="{DynamicResource BackgroundGradient}">
                <Grid>

                    <Grid x:Name="CustomerGrid" Margin="2,0,0,0" DataContext="{StaticResource dTO_CustomerViewSource}">
                        <TextBlock x:Name="textBlock" Text="Customer Information" TextWrapping="Wrap" Margin="77,34,2270.333,905.333" FontSize="20" FontWeight="Bold" TextDecorations="Underline" Foreground="Black"/>
                        <Grid x:Name="CustomerComplete"  DataContext="{StaticResource dTO_CustomerViewSource}">

                            <Button x:Name="AddClaimBtn" Content="Submit Claim" Margin="890,480,1536.333,385.333" Click="AddClaimBtn_Click"/>
                            <Button x:Name="NextClaimBtn" Content="Next" Margin="956,585,1534.333,280.333" Click="NextClaimBtn_Click"/>
                            <Button x:Name="PrevClaimBtn" Content="Prev" Margin="890,585,1606.333,280.333" Click="PrevClaimBtn_Click"/>
                            <syncfusion:Carousel x:Name="carousel"   
                            VisualMode="CustomPath"
                            VerticalAlignment="Top"
                            ItemsPerPage="5"
                            RadiusX="250"
                            Height="257"
                            Width="558"    
                            SelectedIndex="4" 
                            Margin="192,698,1807.333,0" Loaded="carousel_Loaded">

                                <syncfusion:Carousel.Path>

                                    <Path Data="M0,300 L600,300" Stroke="Blue" StrokeThickness="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                                </syncfusion:Carousel.Path>

                                <syncfusion:Carousel.ItemTemplate>

                                    <DataTemplate>
                                        <StackPanel Width="200" Height="200">
                                            <Border Height="100" Width="100" Background="LightBlue">

                                                <Image Height="200" Width="200" Source = "{Binding Path=Image, IsAsync=True}" />

                                            </Border>


                                        </StackPanel>
                                    </DataTemplate>

                                </syncfusion:Carousel.ItemTemplate>

                            </syncfusion:Carousel>


                            <Image x:Name="image" Margin="1464,0,282.333,572.333"/>
                            <WrapPanel Margin="1062,480,0.333,10.333"/>
                            <Grid x:Name="CustAddressGrid" DataContext="{StaticResource dTO_AddressViewSource}" HorizontalAlignment="Left" Margin="65,96,0,0" VerticalAlignment="Top" Height="60" Width="416">

                                <syncfusion:MaskedTextBox x:Name="addressMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="0,2,0,35" Grid.Row="0" Text="{Binding Address}" VerticalAlignment="Center" Width="416" WatermarkText="Property Address" TextSelectionOnFocus="False"/>
                                <syncfusion:IntegerTextBox x:Name="addressIDIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="1" Text="{Binding Address}" VerticalAlignment="Center" Width="100" Visibility="Hidden"/>
                                <syncfusion:IntegerTextBox x:Name="customerIDIntegerTextBox1" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="2" Text="{Binding CustomerID, ElementName=customerIDIntegerTextBox, Mode=TwoWay}" VerticalAlignment="Center" Width="100" Visibility="Hidden"/>
                                <syncfusion:MaskedTextBox x:Name="zipMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="316,31,0,6" Text="{Binding Zip}" VerticalAlignment="Center" Width="100" WatermarkText="Zipcode"/>
                                <syncfusion:MaskedTextBox x:Name="cityMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="0,31,0,6" VerticalAlignment="Center" Width="206" WatermarkText="City" Mask="" ReadOnly="True" IsUndoEnabled="True"/>
                                <syncfusion:MaskedTextBox x:Name="stateMaskedTextBox_Copy1" HorizontalAlignment="Left" Height="23" Margin="211,31,0,6" VerticalAlignment="Center" Width="100" WatermarkText="State" ReadOnly="True" Mask=""/>
                            </Grid>



                            <syncfusion:IntegerTextBox x:Name="customerIDIntegerTextBox" HorizontalAlignment="Left" Height="23" Margin="494,70,0,872.333" MinWidth="10" NumberGroupSeparator="," Grid.Row="0" Text="{Binding CustomerID}" VerticalAlignment="Center" Width="30" IsReadOnlyCaretVisible="True" IsScrollingOnCircle="False"/>

                            <syncfusion:MaskedTextBox x:Name="emailMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="66,185,0,757.333" Text="{Binding Email}" VerticalAlignment="Center" Width="415"/>

                            <syncfusion:MaskedTextBox x:Name="firstNameMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="66,69,0,873.333" Text="{Binding FirstName}" VerticalAlignment="Center" Width="100" WatermarkText="First Name"/>

                            <syncfusion:MaskedTextBox x:Name="lastNameMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="276,70,0,872.333" Text="{Binding LastName}" VerticalAlignment="Center" Width="100" WatermarkText="Last Name"/>

                            <CheckBox x:Name="mailPromosCheckBox" Content="Enrolled in Email Updates" HorizontalAlignment="Left" IsChecked="{Binding MailPromos, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="192,158,0,785.333" VerticalAlignment="Center" Width="162" Height="22" Foreground="#FF907373"/>

                            <syncfusion:MaskedTextBox x:Name="middleNameMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="171,69,0,873.333" Text="{Binding MiddleName}" VerticalAlignment="Center" Width="100" WatermarkText="Middle Name"/>

                            <syncfusion:MaskedTextBox x:Name="primaryNumberMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="66,157,0,785.333" Text="{Binding PrimaryNumber}" VerticalAlignment="Center" Width="120" WatermarkText="Primary Number" Mask="(###) ###-####"/>
                            <syncfusion:MaskedTextBox x:Name="secondaryNumberMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="359,157,0,785.333" Text="{Binding SecondaryNumber}" VerticalAlignment="Center" Width="122" WatermarkText="Secondary Number" Mask="(###) ###-####" WatermarkOpacity="0"/>
                            <syncfusion:MaskedTextBox x:Name="suffixMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="381,70,0,872.333" Text="{Binding Suffix}" VerticalAlignment="Center" Width="100" WatermarkText="Suffix"/>
                        </Grid>
                        <Grid x:Name="ReferrerGrid" DataContext="{Binding ElementName=creditToIDComboBox.SelectedItemValue, Converter={StaticResource CCC},ConverterParameter=2}"  HorizontalAlignment="Left" Margin="66,316,0,0" VerticalAlignment="Top" Height="170" Width="424">

                            <syncfusion:MaskedTextBox x:Name="cellPhoneMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="10,96,0,32" Grid.Row="0" Text="{Binding CellPhone}" VerticalAlignment="Center" Width="127" Mask="(###) ###-####" WatermarkText="Cell Number"/>
                            <syncfusion:MaskedTextBox x:Name="emailMaskedTextBox1" HorizontalAlignment="Left" Height="23" Margin="142,96,0,32" Text="{Binding Email}" VerticalAlignment="Center" Width="272" Mask="" WatermarkText="Email Address"/>
                            <syncfusion:MaskedTextBox x:Name="firstNameMaskedTextBox1" HorizontalAlignment="Left" Height="23" Margin="10,13,0,115" Text="{Binding FirstName}" VerticalAlignment="Center" Width="146" WatermarkText="First Name"/>
                            <syncfusion:MaskedTextBox x:Name="lastNameMaskedTextBox1" HorizontalAlignment="Left" Height="23" Margin="161,13,0,115" Text="{Binding LastName}" VerticalAlignment="Center" Width="148" WatermarkText="Last Name"/>
                            <syncfusion:MaskedTextBox x:Name="mailingAddressMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="10,42,0,86" Text="{Binding MailingAddress}" VerticalAlignment="Center" Width="404" WatermarkText="Mailing Address"/>
                            <syncfusion:MaskedTextBox x:Name="suffixMaskedTextBox1" HorizontalAlignment="Left" Height="23" Margin="314,13,0,115" Text="{Binding Suffix}" VerticalAlignment="Center" Width="100" WatermarkText="Suffix"/>
                            <syncfusion:MaskedTextBox x:Name="zipMaskedTextBox1" HorizontalAlignment="Left" Height="23" Margin="314,70,0,58" Text="{Binding Zip}" VerticalAlignment="Center" Width="100" WatermarkText="Zipcode" Mask="#####"/>
                            <syncfusion:MaskedTextBox x:Name="cityMaskedTextBox_REF" HorizontalAlignment="Left" Height="23" Margin="10,80,0,67" VerticalAlignment="Center" Width="201" WatermarkText="City" Mask="" ReadOnly="True" IsUndoEnabled="True"/>
                            <syncfusion:MaskedTextBox x:Name="stateMaskedTextBox_REF" HorizontalAlignment="Left" Height="23" Margin="216,80,0,67" VerticalAlignment="Center" Width="95" WatermarkText="State" ReadOnly="True" Mask=""/>
                        </Grid>
                        <Grid x:Name="InsuranceCoGrid" DataContext="{StaticResource dTO_InsuranceCompanyViewSource}" HorizontalAlignment="Left" Margin="65,517,0,0" VerticalAlignment="Top" Height="213" Width="459">

                            <syncfusion:MaskedTextBox x:Name="addressMaskedTextBox1" Height="23" Margin="10,57,168,133" Grid.Row="0" Text="{Binding Address}" VerticalAlignment="Center" WatermarkText="Address"/>
                            <syncfusion:MaskedTextBox x:Name="claimPhoneExtMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="401,57,0,133" Text="{Binding ClaimPhoneExt}" VerticalAlignment="Center" Width="48"/>
                            <syncfusion:MaskedTextBox x:Name="claimPhoneNumberMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="296,57,0,133" Text="{Binding ClaimPhoneNumber}" VerticalAlignment="Center" Width="100"/>
                            <syncfusion:MaskedTextBox x:Name="companyNameMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="10,10,0,180" Text="{Binding CompanyName}" VerticalAlignment="Center" Width="386" WatermarkText="Company Name"/>
                            <syncfusion:MaskedTextBox x:Name="emailMaskedTextBox2" HorizontalAlignment="Left" Height="23" Margin="10,135,0,55" Text="{Binding Email}" VerticalAlignment="Center" Width="386" WatermarkText="Claims Email Address..."/>
                            <syncfusion:IntegerTextBox x:Name="faxExtIntegerTextBox" HorizontalAlignment="Left" Height="23" Margin="401,92,0,98" NumberGroupSeparator="," Text="{Binding FaxExt}" VerticalAlignment="Center" Width="48"/>
                            <syncfusion:MaskedTextBox x:Name="faxNumberMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="296,92,0,98" Text="{Binding FaxNumber}" VerticalAlignment="Center" Width="100" WatermarkText="Fax #"/>
                            <CheckBox x:Name="independentCheckBox" Content="Ind'p't" HorizontalAlignment="Left" IsChecked="{Binding Independent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="401,10,0,183" VerticalAlignment="Center" Height="20" Width="58"/>
                            <syncfusion:IntegerTextBox x:Name="insuranceCompanyIDIntegerTextBox" HorizontalAlignment="Left" Height="23" Margin="401,135,0,55" NumberGroupSeparator="," Text="{Binding InsuranceCompanyID}" VerticalAlignment="Center" Width="49"/>
                            <syncfusion:MaskedTextBox x:Name="zipTextBox" HorizontalAlignment="Left" Height="23" Margin="229,92,0,98" Text="{Binding Zip}" VerticalAlignment="Center" Width="62" WatermarkText="Zipcode"/>
                            <syncfusion:MaskedTextBox x:Name="cityMaskedTextBox_IC" HorizontalAlignment="Left" Height="23" Margin="10,92,0,98" VerticalAlignment="Center" Width="144" WatermarkText="City" Mask="" ReadOnly="True" IsUndoEnabled="True"/>
                            <syncfusion:MaskedTextBox x:Name="stateMaskedTextBox_IC" HorizontalAlignment="Left" Height="23" Margin="157,92,0,98" VerticalAlignment="Center" Width="69" WatermarkText="State" ReadOnly="True" Mask=""/>
                        </Grid>
                        <ComboBox x:Name="dTO_InsuranceCompanyComboBox" DisplayMemberPath="CompanyName" ItemsSource="{Binding Source={StaticResource dTO_InsuranceCompanyViewSource}}" Margin="66,486,2033.333,448.333" SelectedValuePath="InsuranceCompanyID">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Grid x:Name="InspectionGrid" DataContext="{StaticResource dTO_InspectionViewSource}" HorizontalAlignment="Left" Margin="555,35,0,0" VerticalAlignment="Top" Height="401" Width="509">


                            <TextBlock x:Name="claimIDTextBlock" HorizontalAlignment="Left" Margin="214,209,0,138" Grid.Row="0" Text="{Binding ClaimID}" VerticalAlignment="Center" Foreground="Black"/>

                            <syncfusion:MaskedTextBox x:Name="commentsTextBox" HorizontalAlignment="Left" Height="75" Margin="205,316,0,10" Text="{Binding Comments, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="278"/>

                            <CheckBox x:Name="coverPoolCheckBox" Content="Cover Pool" HorizontalAlignment="Left" IsChecked="{Binding CoverPool, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,156,0,230" VerticalAlignment="Top" Width="102"/>
                            <syncfusion:IntegerTextBox x:Name="customerIDIntegerTextBox4" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="2" Text="{Binding CustomerID, ElementName=customerIDIntegerTextBox, Mode=TwoWay}" VerticalAlignment="Center" Width="100" Visibility="Hidden"/>


                            <CheckBox x:Name="drivewayDamageCheckBox" Content="Driveway Damage" HorizontalAlignment="Left" IsChecked="{Binding DrivewayDamage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,374,0,0" VerticalAlignment="Top" Width="121"/>

                            <CheckBox x:Name="emergencyRepairCheckBox" Content="Emergency Repair" HorizontalAlignment="Left" IsChecked="{Binding EmergencyRepair, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,275,0,0" VerticalAlignment="Top" Width="121" RenderTransformOrigin="-0.201,2.67"/>

                            <syncfusion:CurrencyTextBox x:Name="emergencyRepairAmountCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="205,275,0,103" Text="{Binding EmergencyRepairAmount}" VerticalAlignment="Center" Width="118" WatermarkText="Emergency Repair Amount" Value="0.00" WatermarkTextIsVisible="True" UseNullOption="True" NullValue="0.00" EnableTouch="True" EnableFocusColors="True"/>

                            <CheckBox x:Name="exteriorDamageCheckBox" Content="Exterior Damage" HorizontalAlignment="Left" IsChecked="{Binding ExteriorDamage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,213,0,0" VerticalAlignment="Top" Width="121"/>

                            <CheckBox x:Name="furnishPermitCheckBox" Content="Furnish Permit" HorizontalAlignment="Left" IsChecked="{Binding FurnishPermit, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,135,0,250" VerticalAlignment="Top" Width="102"/>

                            <CheckBox x:Name="gutterDamageCheckBox" Content="Gutter Damage" HorizontalAlignment="Left" IsChecked="{Binding GutterDamage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,193,0,193" VerticalAlignment="Top" Width="102"/>

                            <CheckBox x:Name="iceWaterShieldCheckBox" Content="Use Ice/Water Shield" HorizontalAlignment="Left" IsChecked="{Binding IceWaterShield, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,254,0,0" VerticalAlignment="Top" Width="136"/>
                            <Label Content="Inspection Date:" Grid.Column="0" HorizontalAlignment="Left" Margin="205,20,0,355" VerticalAlignment="Center"/>
                            <DatePicker x:Name="inspectionDateDatePicker" HorizontalAlignment="Left" Margin="205,32,0,307" SelectedDate="{Binding InspectionDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>

                            <CheckBox x:Name="interiorDamageCheckBox" Content="Interior Damage" HorizontalAlignment="Left" IsChecked="{Binding InteriorDamage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,75,0,0" VerticalAlignment="Top" Width="114"/>

                            <CheckBox x:Name="leaksCheckBox" Content="Leaks" HorizontalAlignment="Left" IsChecked="{Binding Leaks, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,176,0,210" VerticalAlignment="Top" Width="102"/>

                            <CheckBox x:Name="lightningProtectionCheckBox" Content="Lightning Protection" HorizontalAlignment="Left" IsChecked="{Binding LightningProtection, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,19,0,0" VerticalAlignment="Top" Width="130"/>

                            <CheckBox x:Name="magneticRollersCheckBox" Content="Magnetic Roller Sweep" HorizontalAlignment="Left" IsChecked="{Binding MagneticRollers, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,234,0,0" VerticalAlignment="Top" Width="145" Checked="magneticRollersCheckBox_Checked"/>

                            <CheckBox x:Name="protectLandscapingCheckBox" Content="Protect Landscaping" HorizontalAlignment="Left" IsChecked="{Binding ProtectLandscaping, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,55,0,0" VerticalAlignment="Top" Width="130"/>

                            <CheckBox x:Name="qualityControlCheckBox" Content="Quality Control Inspection" HorizontalAlignment="Left" IsChecked="{Binding QualityControl, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,36,0,0" VerticalAlignment="Top" Width="162"/>

                            <CheckBox x:Name="removeTrashCheckBox" Content="Remove Jobsite Debris" HorizontalAlignment="Left" IsChecked="{Binding RemoveTrash, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,116,0,0" VerticalAlignment="Top" Width="145"/>
                            <Label Content="Ridge Material Type" Grid.Column="0" HorizontalAlignment="Left" Margin="331,20,0,355" VerticalAlignment="Center"/>
                            <ComboBox x:Name="ridgeMaterialTypeIDComboBox" DisplayMemberPath="RidgeMaterialType" SelectedValue="RidgeMaterialTypeID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="331,49,0,330" VerticalAlignment="Center" Width="120">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>

                            <syncfusion:MaskedTextBox x:Name="roofAgeTextBox" Grid.Column="0" HorizontalAlignment="Left" Height="23" Margin="331,156,0,222" Grid.Row="0" Text="{Binding RoofAge, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" WatermarkText="Roof Age" WatermarkTextMode="HideTextOnTyping" WatermarkTextIsVisible="True"/>

                            <CheckBox x:Name="satelliteCheckBox" Content="Satellites" HorizontalAlignment="Left" IsChecked="{Binding Satellite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,355,0,31" VerticalAlignment="Top" Width="102"/>
                            <Label Content="Shingle Type" Grid.Column="0" HorizontalAlignment="Left" Margin="331,85,0,290" VerticalAlignment="Center"/>
                            <ComboBox x:Name="shingleTypeIDComboBox" DisplayMemberPath="ShingleTypeID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="331,111,0,268" VerticalAlignment="Center" Width="120">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>

                            <CheckBox x:Name="skyLightsCheckBox" Content="Sky Lights" HorizontalAlignment="Left" IsChecked="{Binding SkyLights, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,335,0,51" VerticalAlignment="Top" Width="102"/>

                            <CheckBox x:Name="solarPanelsCheckBox" Content="Solar Panels" HorizontalAlignment="Left" IsChecked="{Binding SolarPanels, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,316,0,70" VerticalAlignment="Top" Width="102"/>

                            <CheckBox x:Name="tearOffCheckBox" Content="Removal of Old Roof" HorizontalAlignment="Left" IsChecked="{Binding TearOff, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,295,0,0" VerticalAlignment="Top" Width="136"/>

                            <CheckBox x:Name="valleyCheckBox" Content="Valley Metal" HorizontalAlignment="Left" IsChecked="{Binding Valley, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10,96,0,290" VerticalAlignment="Top" Width="102"/>
                        </Grid>
                        <Grid x:Name="ClaimGrid" DataContext="{StaticResource dTO_ClaimViewSource}" HorizontalAlignment="Left" Margin="555,486,0,0" VerticalAlignment="Top" Height="198" Width="311">

                            <syncfusion:IntegerTextBox x:Name="billingIDIntegerTextBox" Visibility="Hidden"  Grid.Column="1" HorizontalAlignment="Left" Height="Auto" Text="{Binding AddressID, ElementName=addressIDIntegerTextBox, Mode=TwoWay}" Margin="3" Grid.Row="0" VerticalAlignment="Center" Width="120"/>
                            <syncfusion:IntegerTextBox x:Name="claimIDIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="1" Text="{Binding ClaimID}" VerticalAlignment="Center" Width="100" Visibility="Hidden"/>
                            <syncfusion:IntegerTextBox x:Name="customerIDIntegerTextBox3" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="2" Text="{Binding CustomerID, ElementName=customerIDIntegerTextBox, Mode=TwoWay}" VerticalAlignment="Center" Width="100" Visibility="Hidden"/>

                            <Label Content="Insurance Claim Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="10,39,0,133" VerticalAlignment="Center"/>
                            <syncfusion:MaskedTextBox x:Name="insuranceClaimNumberMaskedTextBox" HorizontalAlignment="Left" Height="23" Margin="164,41,0,134" Text="{Binding InsuranceClaimNumber}" VerticalAlignment="Center" Width="120"/>
                            <Label Content="Insurance Company ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="-9,190,0,-18" VerticalAlignment="Center" Visibility="Hidden"/>
                            <ComboBox x:Name="insuranceCompanyIDComboBox1" DisplayMemberPath="CompanyName" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding ElementName=insuranceCompanyIDComboBox}" SelectedValue="InsuranceCompanyID" Margin="10,44,0,132" VerticalAlignment="Center" Width="120" Visibility="Hidden">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <CheckBox x:Name="isOpenCheckBox" Content="Open Claim" HorizontalAlignment="Left" IsChecked="{Binding IsOpen, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3,10,0,173" VerticalAlignment="Center" Width="138"/>
                            <CheckBox x:Name="isSigned" Content="Deal is Signed" Visibility="Visible" Grid.Column="1" HorizontalAlignment="Left" Height="Auto" IsChecked="{Binding ContractSigned}" Margin="3" Grid.Row="6" VerticalAlignment="Center" Width="120"/>
                            <Label Content="Loss Date:" Grid.Column="0" HorizontalAlignment="Left" Margin="10,107,0,65" VerticalAlignment="Center" />
                            <DatePicker x:Name="lossDateDatePicker" HorizontalAlignment="Left" Margin="108,108,0,66" SelectedDate="{Binding LossDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="176"/>
                            <Label Content="Mortgage Account:" Grid.Column="0" HorizontalAlignment="Left" Margin="174,135,0,37" VerticalAlignment="Center"/>
                            <syncfusion:MaskedTextBox x:Name="mortgageAccountMaskedTextBox" HorizontalAlignment="Left" Height="24" Margin="177,161,0,13" Text="{Binding MortgageAccount}" VerticalAlignment="Center" Width="107"/>
                            <Label Content="Mortgage Company:" Grid.Column="0" HorizontalAlignment="Left" Margin="28,135,0,37" VerticalAlignment="Center"/>
                            <syncfusion:MaskedTextBox x:Name="mortgageCompanyMaskedTextBox" HorizontalAlignment="Left" Height="24" Margin="23,161,0,13" Text="{Binding MortgageCompany}" VerticalAlignment="Center" Width="131"/>
                            <Label Content="MRNNumber:" Grid.Column="0" HorizontalAlignment="Left" Margin="71,68,0,104" VerticalAlignment="Center"/>
                            <syncfusion:MaskedTextBox x:Name="mRNNumberMaskedTextBox" HorizontalAlignment="Left" Height="22" Margin="164,72,0,104" Text="{Binding MRNNumber}" VerticalAlignment="Center" Width="120"/>
                            <syncfusion:IntegerTextBox x:Name="propertyIDIntegerTextBox" HorizontalAlignment="Left" Height="Auto" Text="{Binding PropertyID, ElementName=addressIDIntegerTextBox, Mode=TwoWay}" Margin="166,0,0,178" VerticalAlignment="Center" Width="120"/>
                        </Grid>
                        <Grid x:Name="LeadGrid" DataContext="{StaticResource dTO_LeadViewSource}" HorizontalAlignment="Left" Margin="79,259,0,0"  VerticalAlignment="Top" Height="66" Width="389">
                            <syncfusion:IntegerTextBox x:Name="addressIDIntegerTextBox1" Grid.Column="1" HorizontalAlignment="Left" Height="19" Text="{Binding AddressID, ElementName=addressIDIntegerTextBox, Mode=TwoWay}" Margin="3" Grid.Row="0" VerticalAlignment="Center" Width="120" Visibility="Hidden"/>
                            <ComboBox x:Name="creditToIDComboBox" DisplayMemberPath="CreditToID" HorizontalAlignment="Left" Height="22" ItemsSource="{Binding}" Margin="172,43,0,0" VerticalAlignment="Top" Width="207">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <syncfusion:IntegerTextBox x:Name="customerIDIntegerTextBox2" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="2" Text="{Binding CustomerID, ElementName=customerIDIntegerTextBox, Mode=TwoWay}" VerticalAlignment="Center" Width="100" Visibility="Hidden"/>

                            <ComboBox x:Name="knockerResponseIDComboBox" DisplayMemberPath="KnockerResponseID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="11,37,0,135" VerticalAlignment="Center" Width="120" Visibility="Hidden">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <DatePicker x:Name="leadDateDatePicker" HorizontalAlignment="Left" Margin="170,10,0,0" SelectedDate="{Binding LeadDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Height="22" Width="209"/>
                            <syncfusion:IntegerTextBox x:Name="leadIDIntegerTextBox" HorizontalAlignment="Left" Height="23" Margin="130,145,0,26" MinWidth="100" NumberGroupSeparator="," Text="{Binding LeadID, ElementName=leadIntegerTextBox1, Mode=TwoWay}" VerticalAlignment="Center" Width="100" Visibility="Hidden"/>
                            <ComboBox x:Name="leadTypeIDComboBox" DisplayMemberPath="LeadType" HorizontalAlignment="Left" Height="22" Margin="11,43,0,0" VerticalAlignment="Top" Width="120">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <ComboBox x:Name="salesPersonIDComboBox1" DataContext="dTO_ClaimContactsViewSource" SelectedItem="{StaticResource _Employee}" HorizontalAlignment="Left" Height="22" ItemsSource="{Binding}" Margin="11,0,0,34" VerticalAlignment="Bottom" Width="122">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <ComboBox x:Name="temperatureComboBox" DisplayMemberPath="Temperature" DataContext="{StaticResource dTO_LeadViewSource}" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="328,162,0,10" VerticalAlignment="Center" Width="120" Visibility="Hidden">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </Grid>
                    </Grid>
                    <ComboBox x:Name="ExistingContactInfoCombo" Margin="260,236,2102.333,707.333" SelectionChanged="ExistingContactInfoCombo_SelectionChanged_1"/>
                    <TextBlock x:Name="textBlock_Copy" TextWrapping="Wrap" Margin="77,231,2304.333,707.333" FontWeight="Bold" TextDecorations="Underline" Foreground="Black"><Run FontSize="20" Text="Lead "/><Run FontSize="20" Text="Information"/></TextBlock>
                    <TextBlock x:Name="textBlock_Copy1" Text="Insurance Provider" TextWrapping="Wrap" Margin="77,452,2303.333,485.333" FontSize="20" FontWeight="Bold" TextDecorations="Underline" Foreground="Black"/>
                    <Grid Margin="1290,32,187.333,0.333">
                        <Frame x:Name="frame" Content="Frame" HorizontalAlignment="Left" Height="245" Margin="24,63,0,0" VerticalAlignment="Top" Width="543" Visibility="Hidden"/>
                        <syncfusion:SfMaskedEdit x:Name="ImageComments_Copy" HorizontalAlignment="Left" Height="131" Margin="-18,360,0,0" TextWrapping="Wrap" Text="SfMaskedEdit" VerticalAlignment="Top" Width="543"/>
                        <WrapPanel x:Name="wp" Height="636" Margin="572,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="484"/>

                        <Grid x:Name="grid1" VerticalAlignment="Top" HorizontalAlignment="Left" DataContext="{StaticResource dTO_InspectionViewSource}" Width="431" Margin="94,318,0,0" Visibility="Hidden">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="130"/>
                                <ColumnDefinition Width="Auto" MinWidth="130"/>
                                <ColumnDefinition Width="Auto" MinWidth="130"/>
                                <ColumnDefinition Width="Auto" MinWidth="20"/>
                            </Grid.ColumnDefinitions>
                            <Label VerticalAlignment="Center" Grid.Row="9" Margin="0,0,0,6" HorizontalAlignment="Left" Content="Cover Pool:" Foreground="White" Height="26" Width="70" Grid.Column="2"/>
                            <CheckBox x:Name="coverPoolCheckBox1" VerticalAlignment="Center" Grid.Row="9" Margin="0,0,0,16" IsChecked="{Binding CoverPool, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content="" Height="16" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="10" Margin="0,0,0,6" HorizontalAlignment="Left" Content="Driveway Damage:" Foreground="White" Height="26" Width="108"/>
                            <CheckBox x:Name="drivewayDamageCheckBox1" VerticalAlignment="Center" Grid.Row="10" Margin="0,0,0,16" IsChecked="{Binding DrivewayDamage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content="" Height="16" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="8" Margin="0,0,0,6" HorizontalAlignment="Left" Content="Emergency Repair:" Foreground="White" Height="26" Width="108"/>
                            <CheckBox x:Name="emergencyRepairCheckBox1" VerticalAlignment="Center" Grid.Row="8" Margin="0,0,0,16" IsChecked="{Binding EmergencyRepair, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content="" Height="16" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="9" Margin="0,0,0,6" HorizontalAlignment="Left" Content="Emergency Repair Amount:" Foreground="White" Height="26" Width="154"/>
                            <syncfusion:CurrencyTextBox x:Name="emergencyRepairAmountTextBox" Width="120" VerticalAlignment="Center" Text="{Binding EmergencyRepairAmount, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="9" Margin="0,0,0,10" Height="22" HorizontalAlignment="Left" Grid.Column="1" Background="{x:Null}" Foreground="White" PositiveForeground="White" SelectionForeground="#FFFFD0D0" WatermarkTextForeground="White" ZeroColor="White"/>
                            <Label VerticalAlignment="Center" Grid.Row="7" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Exterior Damage:" Foreground="White" Height="26" Width="100"/>
                            <CheckBox x:Name="exteriorDamageCheckBox1" VerticalAlignment="Center" Grid.Row="7" Margin="0,0,0,17" IsChecked="{Binding ExteriorDamage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Content="" Grid.Column="3" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="6" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Furnish Permit:" Foreground="White" Height="26" Width="88"/>
                            <CheckBox x:Name="furnishPermitCheckBox1" VerticalAlignment="Center" Grid.Row="6" Margin="0,0,0,17" IsChecked="{Binding FurnishPermit, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Content="" Grid.Column="3" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="12" Margin="0,0,0,3" Content="Gutter Damage:" Foreground="White" Height="26"/>
                            <Label VerticalAlignment="Center" Grid.Row="11" Margin="3,3,0,3" HorizontalAlignment="Left" Grid.Column="0" Content="Ice Water Shield:" Foreground="White" Height="26" Width="98"/>
                            <CheckBox x:Name="iceWaterShieldCheckBox1" VerticalAlignment="Center" Grid.Row="11" Margin="0,0,0,16" IsChecked="{Binding IceWaterShield, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content="" Height="16" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="1" Margin="3,3,0,3" HorizontalAlignment="Left" Grid.Column="0" Content="Inspection Date:" Foreground="White" Height="26" Width="95"/>
                            <DatePicker x:Name="inspectionDateDatePicker1" VerticalAlignment="Center" SelectedDate="{Binding InspectionDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Margin="3,4,0,4" HorizontalAlignment="Left" Grid.Column="1" Height="24" Width="122"/>
                            <Label VerticalAlignment="Center" Margin="3,3,0,3" HorizontalAlignment="Left" Grid.Column="0" Content="Inspection ID:" Foreground="White" Height="26" Width="82"/>
                            <TextBox x:Name="inspectionIDTextBox" Width="120" VerticalAlignment="Center" Text="{Binding InspectionID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3,4,0,4" Height="24" HorizontalAlignment="Left" Grid.Column="1" Background="{x:Null}" Foreground="White" BorderBrush="{x:Null}"/>
                            <Label VerticalAlignment="Center" Margin="0,0,0,6" HorizontalAlignment="Left" Content="Interior Damage:" Foreground="White" Grid.Row="13" Height="26" Width="99"/>
                            <CheckBox x:Name="interiorDamageCheckBox1" VerticalAlignment="Center" Margin="0,0,0,17" IsChecked="{Binding InteriorDamage, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Content="" Grid.Row="13" Grid.Column="1" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Margin="0,0,0,6" Content="Leaks:" Foreground="White" Height="26" Grid.Row="7"/>
                            <CheckBox x:Name="leaksCheckBox1" VerticalAlignment="Center" Margin="0,0,0,17" IsChecked="{Binding Leaks, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content="" Height="15" Width="20" Grid.Row="7"/>
                            <Label VerticalAlignment="Center" Grid.Row="1" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Lightning Protection:" Foreground="White" Height="26" Width="121"/>
                            <CheckBox x:Name="lightningProtectionCheckBox1" VerticalAlignment="Center" Grid.Row="1" Margin="0,0,0,17" IsChecked="{Binding LightningProtection, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content="" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="2" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Magnetic Rollers:" Foreground="White" Height="26" Width="101"/>
                            <CheckBox x:Name="magneticRollersCheckBox1" VerticalAlignment="Center" Grid.Row="2" Margin="0,0,0,17" IsChecked="{Binding MagneticRollers, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content="" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="3" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Protect Landscaping:" Foreground="White" Height="26" Width="120"/>
                            <CheckBox x:Name="protectLandscapingCheckBox1" VerticalAlignment="Center" Grid.Row="3" Margin="0,0,0,17" IsChecked="{Binding ProtectLandscaping, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content="" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="4" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Quality Control:" Foreground="White" Height="26" Width="93"/>
                            <CheckBox x:Name="qualityControlCheckBox1" VerticalAlignment="Center" Grid.Row="4" Margin="0,0,0,17" IsChecked="{Binding QualityControl, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content="" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="5" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Remove Trash:" Foreground="White" Height="26" Width="86"/>
                            <CheckBox x:Name="removeTrashCheckBox1" VerticalAlignment="Center" Grid.Row="5" Margin="0,0,0,17" IsChecked="{Binding RemoveTrash, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content="" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="3" Margin="0,3" HorizontalAlignment="Left" Content="Existing Ridge Material:" Foreground="White" Height="26" Width="133"/>
                            <syncfusion:ComboBoxAdv x:Name="ridgeMaterialTypeIDTextBox" Width="120" VerticalAlignment="Center" DisplayMemberPath="RidgeMaterialType" SelectedIndex="{Binding RidgeMaterialTypeID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Margin="0,0,0,10" Height="22" HorizontalAlignment="Left" Grid.Column="1"/>
                            <Label VerticalAlignment="Center" Grid.Row="2" Margin="0,0,0,6" HorizontalAlignment="Left" Content="Roof Age:" Foreground="White" Height="26" Width="62"/>
                            <syncfusion:IntegerTextBox x:Name="roofAgeTextBox1" Width="120" VerticalAlignment="Center" Value="{Binding RoofAge, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Margin="0,0,0,10" Height="22" HorizontalAlignment="Left" Grid.Column="1" Foreground="White" Background="{x:Null}" PositiveForeground="White" SelectionForeground="#FFB9B9B9" ZeroColor="White" WatermarkTextForeground="White" WatermarkText="Roof Age" NullValue="0" UseNullOption="True" MaxValue="100" MinValue="0" WatermarkTextIsVisible="True"/>
                            <Label VerticalAlignment="Center" Grid.Row="8" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Satellite:" Foreground="White" Height="26" Width="54"/>
                            <CheckBox x:Name="satelliteCheckBox1" VerticalAlignment="Center" Grid.Row="8" Margin="0,0,0,17" IsChecked="{Binding Satellite, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content="" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="4" Margin="0,0,0,6" HorizontalAlignment="Left" Content="Existing Shingle Type:" Foreground="White" Height="26" Width="144"/>
                            <syncfusion:ComboBoxAdv x:Name="shingleTypeIDTextBox" Width="120" VerticalAlignment="Center" DisplayMemberPath="ShingleType" SelectedIndex="{Binding ShingleTypeID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Margin="0,0,0,10" Height="22" HorizontalAlignment="Left" Grid.Column="1"/>
                            <Label VerticalAlignment="Center" Grid.Row="10" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Sky Lights:" Foreground="White" Height="26" Width="66"/>
                            <CheckBox x:Name="skyLightsCheckBox1" VerticalAlignment="Center" Grid.Row="10" Margin="0,0,0,17" IsChecked="{Binding SkyLights, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content="" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="11" Margin="0,0,0,6" HorizontalAlignment="Left" Grid.Column="2" Content="Solar Panels:" Foreground="White" Height="26" Width="76"/>
                            <CheckBox x:Name="solarPanelsCheckBox1" VerticalAlignment="Center" Grid.Row="11" Margin="0,0,0,17" IsChecked="{Binding SolarPanels, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content="" Height="15" Width="20"/>
                            <Label VerticalAlignment="Center" Grid.Row="5" Margin="0,0,0,6" HorizontalAlignment="Left" Content="Tear Off:" Foreground="White" Height="26" Width="54"/>
                            <CheckBox x:Name="tearOffCheckBox1" VerticalAlignment="Center" Grid.Row="5" Margin="0,0,0,17" IsChecked="{Binding TearOff, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Content="" Height="15" Width="20" Grid.Column="1"/>
                            <Label VerticalAlignment="Center" Grid.Row="6" Margin="0,0,0,6" HorizontalAlignment="Left" Content="Valley Metal:" Foreground="White" Height="26" Width="85"/>
                            <CheckBox x:Name="valleyCheckBox1" VerticalAlignment="Center" Grid.Row="6" Margin="0,0,0,17" IsChecked="{Binding Valley, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Content="" Height="15" Width="20" Grid.Column="1"/>
                        </Grid>
                        <Button x:Name="nextImageBtn" Content="Next&gt;" HorizontalAlignment="Left" Margin="93,311,0,0" VerticalAlignment="Top" Width="75" Click="nextImageBtn_Click"/>
                        <ListBox x:Name="imagelistBox" HorizontalAlignment="Left" Height="308" Margin="0,-4,0,0" VerticalAlignment="Top" Width="168" SelectionChanged="imagelistBox_SelectionChanged"/>
                        <Button x:Name="deleteImageButtonbutton" Content="Delete Image" HorizontalAlignment="Left" Margin="93,334,0,0" VerticalAlignment="Top" Width="75" Click="deleteImageButtonbutton_Click" Height="21"/>
                        <Button x:Name="addImagesbutton" Content="Add Images" Width="75" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Left" Click="addImagesbutton_Click" Margin="0,334,0,309" Height="20"/>
                        <Button x:Name="nextImageBtn_Copy" Content="&lt;Prev" HorizontalAlignment="Left" Margin="0,311,0,0" VerticalAlignment="Top" Width="75" Click="nextImageBtn_Click"/>

                        <Button x:Name="SubmitBtn"  Content="Submit" HorizontalAlignment="Left" Height="26" Margin="494,897,0,0" VerticalAlignment="Top" Width="73" Click="Button_Click"/>

                    </Grid>
                </Grid>

            </TabItem>
            <TabItem x:Name="Supplementation" Header="Supplementation-Auditing Information" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Background="{DynamicResource BackgroundGradient}">
                <Grid>
                    <DataGrid x:Name="dTO_InvoiceDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" Height="Auto" ItemsSource="{Binding Source={StaticResource dTO_InvoiceViewSource}}" Margin="1482,508,593.333,257.333" RowDetailsVisibilityMode="VisibleWhenSelected" Width="Auto">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="claimIDColumn1" Header="Claim ID" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox>
                                            <ComboBoxItem Content="{Binding ClaimID}"/>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="invoiceAmountColumn" Header="Invoice Amount" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <syncfusion:CurrencyTextBox Text="{Binding InvoiceAmount}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="invoiceDateColumn" Header="Invoice Date" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding InvoiceDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="invoiceIDColumn" Header="Invoice ID" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <syncfusion:IntegerTextBox Text="{Binding InvoiceID}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="invoiceTypeIDColumn" Header="Invoice Type ID" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox>
                                            <ComboBoxItem Content="{Binding InvoiceTypeID}"/>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn x:Name="paidColumn" Binding="{Binding Paid}" Header="Paid" Width="SizeToHeader"/>
                            <DataGridTemplateColumn x:Name="vendorIDColumn" Header="Vendor ID" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox>
                                            <ComboBoxItem Content="{Binding VendorID}"/>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid5" DataContext="{StaticResource dTO_AdjustmentViewSource}" HorizontalAlignment="Left" Margin="1448,837,0,-159.667" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Adjuster ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <ComboBox x:Name="adjusterIDComboBox" Grid.Column="1" DisplayMemberPath="AdjusterID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="0" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Adjustment Comment:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <syncfusion:MaskedTextBox x:Name="adjustmentCommentMaskedTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding AdjustmentComment}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Adjustment Date:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <DatePicker x:Name="adjustmentDateDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="2" SelectedDate="{Binding AdjustmentDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>
                        <Label Content="Adjustment ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="adjustmentIDIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="3" Text="{Binding AdjustmentID}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Adjustment Result ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                        <ComboBox x:Name="adjustmentResultIDComboBox" Grid.Column="1" DisplayMemberPath="AdjustmentResultID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="4" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Claim ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                        <ComboBox x:Name="claimIDComboBox" Grid.Column="1" DisplayMemberPath="ClaimID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="5" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Exterior:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
                        <CheckBox x:Name="exteriorCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding Exterior, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
                        <Label Content="Gutters:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="7" VerticalAlignment="Center"/>
                        <CheckBox x:Name="guttersCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding Gutters, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="7" VerticalAlignment="Center"/>
                        <Label Content="Interior:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="8" VerticalAlignment="Center"/>
                        <CheckBox x:Name="interiorCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding Interior, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="8" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid x:Name="grid8" DataContext="{StaticResource dTO_PlaneViewSource}" HorizontalAlignment="Left" Margin="1853,88,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Eave Height:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <syncfusion:DoubleTextBox x:Name="eaveHeightDoubleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" NumberGroupSeparator="," NumberDecimalDigits="2" NumberDecimalSeparator="." Grid.Row="0" Text="{Binding EaveHeight}" Value="0" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Eave Length:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <syncfusion:DoubleTextBox x:Name="eaveLengthDoubleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" NumberGroupSeparator="," NumberDecimalDigits="2" NumberDecimalSeparator="." Grid.Row="1" Text="{Binding EaveLength}" Value="0" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Four And Up:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="fourAndUpIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="2" Text="{Binding FourAndUp}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Group Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="groupNumberIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="3" Text="{Binding GroupNumber}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Hip:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                        <syncfusion:DoubleTextBox x:Name="hipDoubleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" NumberGroupSeparator="," NumberDecimalDigits="2" NumberDecimalSeparator="." Grid.Row="4" Text="{Binding Hip}" Value="0" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Inspection ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="inspectionIDIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="5" Text="{Binding InspectionID}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Item Spec:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
                        <TextBox x:Name="itemSpecTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="6" Text="{Binding ItemSpec, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Number Decking:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="7" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="numberDeckingIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="7" Text="{Binding NumberDecking}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Num Of Layers:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="8" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="numOfLayersIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="8" Text="{Binding NumOfLayers}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Pitch:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="9" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="pitchIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="9" Text="{Binding Pitch}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Plane ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="10" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="planeIDIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="10" Text="{Binding PlaneID}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Plane Type ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="11" VerticalAlignment="Center"/>
                        <ComboBox x:Name="planeTypeIDComboBox" Grid.Column="1" DisplayMemberPath="PlaneTypeID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="11" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Rake Length:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="12" VerticalAlignment="Center"/>
                        <syncfusion:DoubleTextBox x:Name="rakeLengthDoubleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" NumberGroupSeparator="," NumberDecimalDigits="2" NumberDecimalSeparator="." Grid.Row="12" Text="{Binding RakeLength}" Value="0" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Ridge Length:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="13" VerticalAlignment="Center"/>
                        <syncfusion:DoubleTextBox x:Name="ridgeLengthDoubleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" NumberGroupSeparator="," NumberDecimalDigits="2" NumberDecimalSeparator="." Grid.Row="13" Text="{Binding RidgeLength}" Value="0" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Square Footage:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="14" VerticalAlignment="Center"/>
                        <syncfusion:DoubleTextBox x:Name="squareFootageDoubleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" NumberGroupSeparator="," NumberDecimalDigits="2" NumberDecimalSeparator="." Grid.Row="14" Text="{Binding SquareFootage}" Value="0" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Step Flashing:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="15" VerticalAlignment="Center"/>
                        <syncfusion:DoubleTextBox x:Name="stepFlashingDoubleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" NumberGroupSeparator="," NumberDecimalDigits="2" NumberDecimalSeparator="." Grid.Row="15" Text="{Binding StepFlashing}" Value="0" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Three And One:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="16" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="threeAndOneIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="16" Text="{Binding ThreeAndOne}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Turtle Backs:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="17" VerticalAlignment="Center"/>
                        <TextBox x:Name="turtleBacksTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="17" Text="{Binding TurtleBacks, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Valley:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="18" VerticalAlignment="Center"/>
                        <syncfusion:DoubleTextBox x:Name="valleyDoubleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" NumberGroupSeparator="," NumberDecimalDigits="2" NumberDecimalSeparator="." Grid.Row="18" Text="{Binding Valley}" Value="0" VerticalAlignment="Center" Width="100"/>
                    </Grid>
                    <Grid x:Name="grid10" DataContext="{StaticResource dTO_ScopeViewSource}" HorizontalAlignment="Left" Margin="1853,816,0,-330.667" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Accepted:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <CheckBox x:Name="acceptedCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding Accepted, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <Label Content="ACV:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="aCVCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding ACV}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Claim ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="claimIDIntegerTextBox2" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="2" Text="{Binding ClaimID}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Deductible:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="deductibleCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Text="{Binding Deductible}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Depreciation:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="depreciationCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="4" Text="{Binding Depreciation}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Exterior:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="exteriorCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="5" Text="{Binding Exterior}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Gutter:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="gutterCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="6" Text="{Binding Gutter}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Interior:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="7" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="interiorCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="7" Text="{Binding Interior}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Oand P:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="8" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="oandPCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="8" Text="{Binding OandP}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="RCV:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="9" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="rCVCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="9" Text="{Binding RCV}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Roof Amount:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="10" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="roofAmountCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="10" Text="{Binding RoofAmount}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Scope ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="11" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="scopeIDIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="11" Text="{Binding ScopeID}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Scope Type ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="12" VerticalAlignment="Center"/>
                        <ComboBox x:Name="scopeTypeIDComboBox" Grid.Column="1" DisplayMemberPath="ScopeTypeID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="12" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Tax:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="13" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="taxCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="13" Text="{Binding Tax}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Total:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="14" VerticalAlignment="Center"/>
                        <syncfusion:CurrencyTextBox x:Name="totalCurrencyTextBox" CurrencyGroupSeparator="," CurrencyDecimalSeparator="." Grid.Column="1" CurrencySymbol="$" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="14" Text="{Binding Total}" Value="1.00" VerticalAlignment="Center" Width="100"/>
                    </Grid>
                    <Grid x:Name="grid4" DataContext="{StaticResource dTO_ClaimContactsViewSource}" HorizontalAlignment="Left" Margin="1012,428,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Adjuster ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <ComboBox x:Name="adjusterIDComboBox1" Grid.Column="1" DisplayMemberPath="AdjusterID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="0" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Claim Contact ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <ComboBox x:Name="claimContactIDComboBox" Grid.Column="1" DisplayMemberPath="ClaimContactID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="1" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Claim ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <ComboBox x:Name="claimIDComboBox3" Grid.Column="1" DisplayMemberPath="ClaimID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="2" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Customer ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <ComboBox x:Name="customerIDComboBox1" Grid.Column="1" DisplayMemberPath="CustomerID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="3" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Knocker ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                        <ComboBox x:Name="knockerIDComboBox" Grid.Column="1" DisplayMemberPath="KnockerID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="4" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Sales Manager ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                        <ComboBox x:Name="salesManagerIDComboBox" Grid.Column="1" DisplayMemberPath="SalesManagerID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="5" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Sales Person ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
                        <ComboBox x:Name="salesPersonIDComboBox" Grid.Column="1" DisplayMemberPath="SalesPersonID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="6" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Supervisor ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="7" VerticalAlignment="Center"/>
                        <ComboBox x:Name="supervisorIDComboBox" Grid.Column="1" DisplayMemberPath="SupervisorID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="7" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                    </Grid>
                    <DataGrid x:Name="dTO_CallLogDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource dTO_CallLogViewSource}}" Margin="2130,412,-252.667,353.333" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="additionalCommentsColumn" Binding="{Binding AdditionalComments}" Header="Additional Comments" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="callLogIDColumn" Binding="{Binding CallLogID}" Header="Call Log ID" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="callResultsColumn" Binding="{Binding CallResults}" Header="Call Results" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="claimIDColumn" Binding="{Binding ClaimID}" Header="Claim ID" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="employeeIDColumn" Binding="{Binding EmployeeID}" Header="Employee ID" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="reasonForCallColumn" Binding="{Binding ReasonForCall}" Header="Reason For Call" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="whoAnsweredColumn" Binding="{Binding WhoAnswered}" Header="Who Answered" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="whoWasCalledColumn" Binding="{Binding WhoWasCalled}" Header="Who Was Called" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <ListView x:Name="dTO_ClaimStatusListView" DisplayMemberPath="ClaimID" ItemsSource="{Binding Source={StaticResource dTO_ClaimStatusViewSource}}" Margin="2025,450,434.333,415.333" SelectedValuePath="ClaimID" SelectionMode="Single"/>
                    <DataGrid x:Name="dTO_PaymentDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource dTO_PaymentViewSource}}" Margin="2036,755,123.333,10.333" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="amountColumn" Binding="{Binding Amount}" Header="Amount" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="claimIDColumn3" Binding="{Binding ClaimID}" Header="Claim ID" Width="SizeToHeader"/>
                            <DataGridTemplateColumn x:Name="paymentDateColumn" Header="Payment Date" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding PaymentDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="paymentDescriptionIDColumn" Binding="{Binding PaymentDescriptionID}" Header="Payment Description ID" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="paymentIDColumn" Binding="{Binding PaymentID}" Header="Payment ID" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="paymentTypeIDColumn" Binding="{Binding PaymentTypeID}" Header="Payment Type ID" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <ListBox x:Name="dTO_NewRoofListBox" DisplayMemberPath="ClaimID" ItemsSource="{Binding Source={StaticResource dTO_NewRoofViewSource}}" Margin="2296,109,163.333,756.333" SelectedValuePath="ClaimID"/>
                    <DataGrid x:Name="dTO_OrderItemDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" Height="Auto" ItemsSource="{Binding Source={StaticResource dTO_OrderItemViewSource}}" Margin="2296,690,-136.667,75.333" RowDetailsVisibilityMode="VisibleWhenSelected" Width="Auto">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="orderIDColumn" Header="Order ID" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox>
                                            <ComboBoxItem Content="{Binding OrderID}"/>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="orderItemIDColumn" Header="Order Item ID" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <syncfusion:IntegerTextBox Text="{Binding OrderItemID}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="productIDColumn" Header="Product ID" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox>
                                            <ComboBoxItem Content="{Binding ProductID}"/>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="quantityColumn" Header="Quantity" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <syncfusion:IntegerTextBox Text="{Binding Quantity}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="unitOfMeasureIDColumn" Header="Unit Of Measure ID" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox>
                                            <ComboBoxItem Content="{Binding UnitOfMeasureID}"/>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <ListView x:Name="dTO_ClaimDocumentListView" Height="Auto" ItemsSource="{Binding Source={StaticResource dTO_ClaimDocumentViewSource}}" Margin="2078,546,81.333,219.333" SelectionMode="Single" Width="Auto">
                        <ListView.ItemContainerStyle>
                            <Style>
                                <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn x:Name="claimIDColumn2" Header="Claim ID" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="6,-1,-6,-1" Text="{Binding ClaimID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="docTypeIDColumn" Header="Doc Type ID" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding DocTypeID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="documentCommentsColumn" Header="Document Comments" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding DocumentComments, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="documentDateColumn" Header="Document Date" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <DatePicker Margin="-6,-1" SelectedDate="{Binding DocumentDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="documentIDColumn" Header="Document ID" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding DocumentID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="fileBytesColumn" Header="File Bytes" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding FileBytes, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="fileExtColumn" Header="File Ext" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding FileExt, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="fileNameColumn" Header="File Name" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding FileName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="filePathColumn" Header="File Path" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding FilePath, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="initialImagePathColumn" Header="Initial Image Path" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding InitialImagePath, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="numInitialsColumn" Header="Num Initials" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding NumInitials, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="numSignaturesColumn" Header="Num Signatures" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding NumSignatures, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="signatureImagePathColumn" Header="Signature Image Path" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Margin="-6,-1" Text="{Binding SignatureImagePath, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Grid x:Name="grid6" DataContext="{StaticResource dTO_AdjusterViewSource}" HorizontalAlignment="Left" Margin="2296,157,-0.667,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Adjuster ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="adjusterIDIntegerTextBox1" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="0" Text="{Binding AdjusterID}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Comments:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <syncfusion:MaskedTextBox x:Name="commentsMaskedTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Comments}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Email:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <syncfusion:MaskedTextBox x:Name="emailMaskedTextBox3" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Email}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <syncfusion:MaskedTextBox x:Name="firstNameMaskedTextBox2" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Text="{Binding FirstName}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Insurance Company ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                        <ComboBox x:Name="insuranceCompanyIDComboBox" Grid.Column="1" DisplayMemberPath="InsuranceCompanyID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="4" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                        <syncfusion:MaskedTextBox x:Name="lastNameMaskedTextBox2" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="5" Text="{Binding LastName}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Phone Ext:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="phoneExtIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="6" Text="{Binding PhoneExt}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Phone Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="7" VerticalAlignment="Center"/>
                        <syncfusion:MaskedTextBox x:Name="phoneNumberMaskedTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="7" Text="{Binding PhoneNumber}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Suffix:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="8" VerticalAlignment="Center"/>
                        <syncfusion:MaskedTextBox x:Name="suffixMaskedTextBox2" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="8" Text="{Binding Suffix}" VerticalAlignment="Center" Width="100"/>
                    </Grid>
                    <Grid x:Name="grid9" DataContext="{StaticResource dTO_OrderViewSource}" HorizontalAlignment="Left" Margin="2259,774,0,-0.667" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Claim ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <ComboBox x:Name="claimIDComboBox1" Grid.Column="1" DisplayMemberPath="ClaimID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="0" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="Date Dropped:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <DatePicker x:Name="dateDroppedDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="1" SelectedDate="{Binding DateDropped, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>
                        <Label Content="Date Ordered:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <DatePicker x:Name="dateOrderedDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="2" SelectedDate="{Binding DateOrdered, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>
                        <Label Content="Order ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <syncfusion:IntegerTextBox x:Name="orderIDIntegerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" MinWidth="100" NumberGroupSeparator="," Grid.Row="3" Text="{Binding OrderID}" VerticalAlignment="Center" Width="100"/>
                        <Label Content="Scheduled Installation:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                        <DatePicker x:Name="scheduledInstallationDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="4" SelectedDate="{Binding ScheduledInstallation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>
                        <Label Content="Vendor ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                        <ComboBox x:Name="vendorIDComboBox" Grid.Column="1" DisplayMemberPath="VendorID" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding}" Margin="3" Grid.Row="5" VerticalAlignment="Center" Width="120">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem x:Name="Production" Header="Production Information" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Background="{DynamicResource BackgroundGradient}">
                <Grid/>
            </TabItem>
            <TabItem x:Name="PayableReceivable" Header="Claim Payment - Invoices Information" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Background="{DynamicResource BackgroundGradient}">
                <Grid/>
            </TabItem>
            <TabItem x:Name="Administration" Header="Claim Administration" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Background="{DynamicResource BackgroundGradient}">
                <Grid/>
            </TabItem>
            <TabItem x:Name="CapOut" Header="CapOut Information" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Background="{DynamicResource BackgroundGradient}">
                <Grid/>
            </TabItem>



        </TabControl>
    </Grid>




</Page>
