<Page x:Class="MRN_Claim_Services.GetClaimsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:MRNNexus_Model="clr-namespace:MRNNexus_Model;assembly=MRNNexus_Model"
      xmlns:PdfViewer="clr-namespace:Syncfusion.Windows.PdfViewer;assembly=Syncfusion.PdfViewer.WPF"
      xmlns:System="clr-namespace:System;assembly=mscorlib"
      xmlns:cc="clr-namespace:Syncfusion.Windows.PdfViewer;assembly=Syncfusion.PdfViewer.WPF"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:MRN_Claim_Services"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
      Title="GetClaimsPage"
      Width="1600"
      Height="900"
      mc:Ignorable="d">






    <Page.Resources>

        <SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />
        <Style xmlns:sys="clr-namespace:System;assembly=mscorlib"
               x:Key="PromptingTextBox"
               TargetType="{x:Type TextBox}">
            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrush"
                             AlignmentX="Left"
                             AlignmentY="Center"
                             Stretch="None">
                    <VisualBrush.Visual>

                        <Label Content="Duh" Foreground="{StaticResource brushWatermarkForeground}" />
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>
            <Style.Triggers>

                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />

        <SolidColorBrush x:Key="brushWatermarkBorder" Color="Indigo" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style x:Key="EntryFieldStyle" TargetType="{x:Type Grid}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="TabItem.Static.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="Transparent" />
            <GradientStop Offset="1.0" Color="Transparent" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TabItem.Static.Border" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="Lime" />
            <GradientStop Offset="1.0" Color="Yellow" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="HotPink" />
            <GradientStop Offset="1.0" Color="Green" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="Yellow" />
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="DarkGray" />
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="Black" />
        <LinearGradientBrush x:Key="TabItem.Selected.Border" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="Yellow" />
            <GradientStop Offset="1.0" Color="LimeGreen" />
        </LinearGradientBrush>

        <RadialGradientBrush x:Key="TabItem.Selected.Background">
            <GradientStop Offset="0.0" Color="Black" />
            <GradientStop Offset="1.0" Color="Red" />
        </RadialGradientBrush>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="6,2,6,2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder"
                                    Margin="0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,1,1,0">
                                <Border x:Name="innerBorder"
                                        Margin="-1"
                                        Background="{StaticResource TabItem.Selected.Background}"
                                        BorderBrush="{StaticResource TabItem.Selected.Border}"
                                        BorderThickness="1,1,1,0"
                                        Opacity="0" />
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{Binding HorizontalContentAlignment,
                                                                            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding VerticalContentAlignment,
                                                                          RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              ContentSource="Header"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.Border}" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,0,-2" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                                <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,0,-2,-2" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                                <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="0,-2,-2,-2" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                                <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,-2,0" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
                                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>
        <CollectionViewSource x:Key="dTO_ClaimViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Claim}, CreateList=True}" />

        <CollectionViewSource x:Key="dTO_LU_ClaimDocumentTypeViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_LU_ClaimDocumentType}, CreateList=True}" />

        <CollectionViewSource x:Key="dTO_CustomerViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Customer}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_ClaimStatusViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_ClaimStatus}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_EmployeeViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Employee}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_AddressViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_Address}, CreateList=True}" />
        <CollectionViewSource x:Key="dTO_InsuranceCompanyViewSource" d:DesignSource="{d:DesignInstance {x:Type MRNNexus_Model:DTO_InsuranceCompany}, CreateList=True}" />

    </Page.Resources>

    <DockPanel x:Name="Dock">
        <Grid Grid.Row="0" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="29*" />
                <ColumnDefinition Width="291*" />
            </Grid.ColumnDefinitions>
            <CheckBox x:Name="SupplementModeSelector"
                      Grid.Row="0"
                      Grid.Column="1"
                      Margin="247,0,0,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      Click="SupplementModeSelector_Clicked"
                      Content="Supplement Mode"
                      Foreground="White" />
            <CheckBox x:Name="EDcheckBox"
                      Grid.Row="0"
                      Grid.Column="1"
                      Margin="160,0,0,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      Background="Transparent"
                      Checked="checkBox_Checked"
                      Content="Edit Data"
                      Foreground="White" />
            <CheckBox x:Name="Xactimate" Content="Xactimate" Grid.Column="1" HorizontalAlignment="Left" Margin="370,0,0,0" VerticalAlignment="Top" Foreground="White" Panel.ZIndex="20" Checked="Xactimate_Checked" Unchecked="Xactimate_Unchecked"/>
        </Grid>
        <Grid x:Name="GridSupplement"
              Width="800"
              Margin="0"
              HorizontalAlignment="Right"
              DockPanel.Dock="Left"
              Visibility="Collapsed">
            <cc:PdfViewerControl x:Name="pdfviewer2"
                                 Panel.ZIndex="0"
                                 AllowDrop="True"
                                 BorderBrush="Black"
                                 Visibility="Collapsed" />
            <Image x:Name="image1"
                   Panel.ZIndex="1"
                   Source="{StaticResource QuestionMark}"
                   Visibility="Collapsed" />
        </Grid>
        <Grid Width="800"
              Margin="0"
              HorizontalAlignment="Right"
              DockPanel.Dock="Right">
            <cc:PdfViewerControl x:Name="pdfviewer1"
                                 Panel.ZIndex="0"
                                 AllowDrop="True"
                                 BorderBrush="Black"
                                 Visibility="Collapsed" />
            <Image x:Name="image"
                   Panel.ZIndex="0"
                   Source="{StaticResource QuestionMark}"
                   Visibility="Collapsed" />
            <Button x:Name="button"
                    Width="75"
                    Margin="-665,30,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Content="Button"
                    Focusable="False"
                    IsTabStop="False"
                    Visibility="Hidden" />
            <syncfusion:SfBusyIndicator x:Name="BusyIndicator"
                                        Grid.Row="1"
                                        Width="120"
                                        Height="80"
                                        Margin="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        VerticalContentAlignment="Bottom"
                                        Panel.ZIndex="100"
                                        Content="&#xA;&#xA;&#xA;&#xA;Loading Please Wait"
                                        IsBusy="True"
                                        Visibility="Visible" />
        </Grid>
        <Grid MinWidth="400"
              MinHeight="400"
              Margin="10,0,0,0"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              DataContext="{StaticResource dTO_LU_ClaimDocumentTypeViewSource}"
              DockPanel.Dock="Left">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="59*" />
            </Grid.RowDefinitions>


            <ListBox x:Name="ClaimsList"
                     Grid.Row="1"
                     Width="310"
                     Height="190"
                     Margin="10,65,0,0"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Top"
                     DisplayMemberPath="MRNNumber"
                     SelectionChanged="ClaimsList_SelectionChanged" />

            <Button x:Name="InspectionReportBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="1,370,639,470"
                    Click="InspectionReportBtn_Click"
                    Content="Inspection Report"
                    FontSize="16"
                   />
            <Button x:Name="InspectionPhotos"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,370,470,470"
                    Click="InspectionPhotos_Click"
                    Content="Inspection Photos"
                    FontSize="16"
                   />
            <Button x:Name="MaterialInvoiceBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="1,545,639,295"
                    Click="MaterialInvoiceBtn_Click"
                    Content="Material Invoice"
                    FontSize="16"
                   />
            <Button x:Name="RoofLaborInvoiceBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30                     "
                    Margin="1,510,639,330"
                    Click="RoofLaborInvoiceBtn_Click"
                    Content="Roof Labor Invoice"
                    FontSize="16"
                   />
            <Button x:Name="RoofMeasurementBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="1,405,639,435"
                    Click="RoofMeasurementBtn_Click"
                    Content="Roof Measurements"
                    FontSize="16"
                   />
            <Button x:Name="SketchBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,405,470,435"
                    Click="SketchBtn_Click"
                    Content="Sketch"
                    FontSize="16"
                   />
            <Button x:Name="GutterInvoiceBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,545,470,295"
                    Click="GutterInvoiceBtn_Click"
                    Content="Gutter Invoice"
                    FontSize="16"
                   />
            <Button x:Name="InteriorInvoice"
                    Grid.Row="1"
                    Width="150"
                    Height="30                     "
                    Margin="170,510,470,330"
                    Click="InteriorInvoice_Click"
                    Content="Interior Invoice"
                    FontSize="16"
                   />
            <Button x:Name="CustomerAgreementBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="1,440,639,400"
                    Click="CustomerAgreementBtn_Click"
                    Content="Customer Agreement"
                    FontSize="14"
                   />
            <Button x:Name="MRNEstimateBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,440,470,400"
                    Click="MRNEstimateBtn_Click"
                    Content="MRN Estimate"
                    FontSize="16"
                   />
            <Button x:Name="SupplementCheckBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,615,470,225"
                    Click="SupplementCheckBtn_Click"
                    Content="Supplement Check"
                    FontSize="16"
                   />
            <Button x:Name="FirstCheckBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30                     "
                    Margin="1,580,639,260"
                    Click="FirstCheckBtn_Click"
                    Content="1st Check"
                    FontSize="16"
                   />
            <Button x:Name="OriginalScopeBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="1,475,639,365"
                    Click="OriginalScopeBtn_Click"
                    Content="Original Scope"
                    FontSize="16"
                   />
            <Button x:Name="NewestScopeBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,475,470,365"
                    Click="NewestScopeBtn_Click"
                    Content="Newest Scope"
                    FontSize="16"
                   />
            <Button x:Name="DeductibleCheckBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,580,470,260"
                    Click="DeductibleCheckBtn_Click"
                    Content="Deductible Check"
                    FontSize="16"
                   />
            <Button x:Name="DepreciationCheckBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30                     "
                    Margin="1,615,639,225"
                    Click="DepreciationCheckBtn_Click"
                    Content="Depreciation Check"
                    FontSize="16"
                   />
            <Button x:Name="CertificateOfCompletionBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,685,470,155"
                    Click="CertificateOfCompletionBtn_Click"
                    Content="CoC"
                    FontSize="16"
                   />
            <Button x:Name="LienWaiverBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,650,470,190"
                    Click="LienWaiverBtn_Click"
                    Content="Lien Waiver"
                    FontSize="16"
                   />
            <Button x:Name="PlaneDamages"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="1,755,639,85"
                    Click="PlaneDamages_Click"
                    Content="Job Cost Adjustment"
                    FontSize="16"
                   />
            <Button x:Name="AuthorizatonOfCommunicationBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="1,720,639,120"
                    Click="AuthorizatonOfCommunicationBtn_Click"
                    Content="Auth. of Communication"
                    FontSize="13"
                   />
            <Button x:Name="SatisfactionSurveyBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="170,720,470,120"
                    Click="SatisfactionSurveyBtn_Click"
                    Content="Satisfaction Survey"
                    FontSize="16"
                   />

            <Button x:Name="CapOutBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30"
                    Margin="1,685,639,155"
                    Click="CapOutBtn_Click"
                    Content="Cap Out"
                    FontSize="16"
                   />
            <Button x:Name="WarrantyBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30                     "
                    Margin="170,755,470,85"
                    Click="WarrantyBtn_Click"
                    Content="Warranty"
                    FontSize="16"
                   />
            <Button x:Name="ThankyouLetterBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30                     "
                    Margin="170,790,470,50"
                    Click="ThankyouLetterBtn_Click"
                    Content="Thank You Letter"
                    FontSize="16"
                   />
            <Button x:Name="RoofOrderBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30                     "
                    Margin="0,650,640,190"
                    Click="RoofOrderBtn_Click"
                    Content="Roof Order"
                    FontSize="16"
                   />
            <Button x:Name="PolicyBtn"
                    Grid.Row="1"
                    Width="150"
                    Height="30                     "
                    Margin="1,790,639,50"
                    Click="PolicyBtn_Click"
                    Content="Policy"
                    FontSize="16"
                   />
            <Frame x:Name="frame"
                   Grid.Row="1"
                   Width="465"
                   Height="870"
                   Margin="325,0,0,0"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Content="" />
            <TextBlock x:Name="statusTextBlock"
                       Grid.Row="1"
                       Width="310"
                       Height="95"
                       Margin="10,265,0,0"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       Panel.ZIndex="1"
                       x:FieldModifier="public"
                       Foreground="White"
                       Text="{Binding XPath=statusText}"
                       TextWrapping="Wrap" />
            <!--<WebBrowser x:Name="Browser" x:FieldModifier="public"  HorizontalAlignment="Left" Height="455" Margin="17,405,0,0" VerticalAlignment="Top" Width="763" Panel.ZIndex="120" Grid.Row="1"/>-->

        </Grid>


    </DockPanel>
</Page>

