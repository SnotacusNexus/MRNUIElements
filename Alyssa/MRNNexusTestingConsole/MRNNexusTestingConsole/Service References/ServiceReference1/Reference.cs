//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MRNNexusTestingConsole.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMRNNexus_Service")]
    public interface IMRNNexus_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/DoWork", ReplyAction="http://tempuri.org/IMRNNexus_Service/DoWorkResponse")]
        MRNNexus_Model.DTO_Employee DoWork(MRNNexus_Model.DTO_Employee token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/DoWork", ReplyAction="http://tempuri.org/IMRNNexus_Service/DoWorkResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_Employee> DoWorkAsync(MRNNexus_Model.DTO_Employee token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/DoMoreWork", ReplyAction="http://tempuri.org/IMRNNexus_Service/DoMoreWorkResponse")]
        void DoMoreWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/DoMoreWork", ReplyAction="http://tempuri.org/IMRNNexus_Service/DoMoreWorkResponse")]
        System.Threading.Tasks.Task DoMoreWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/AddEmployee", ReplyAction="http://tempuri.org/IMRNNexus_Service/AddEmployeeResponse")]
        MRNNexus_Model.DTO_Employee AddEmployee(MRNNexus_Model.DTO_Employee token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/AddEmployee", ReplyAction="http://tempuri.org/IMRNNexus_Service/AddEmployeeResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_Employee> AddEmployeeAsync(MRNNexus_Model.DTO_Employee token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/RegisterUser", ReplyAction="http://tempuri.org/IMRNNexus_Service/RegisterUserResponse")]
        MRNNexus_Model.DTO_User RegisterUser(MRNNexus_Model.DTO_User token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/RegisterUser", ReplyAction="http://tempuri.org/IMRNNexus_Service/RegisterUserResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_User> RegisterUserAsync(MRNNexus_Model.DTO_User token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/Login", ReplyAction="http://tempuri.org/IMRNNexus_Service/LoginResponse")]
        MRNNexus_Model.DTO_Employee Login(MRNNexus_Model.DTO_User token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/Login", ReplyAction="http://tempuri.org/IMRNNexus_Service/LoginResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_Employee> LoginAsync(MRNNexus_Model.DTO_User token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/AddCalendarData", ReplyAction="http://tempuri.org/IMRNNexus_Service/AddCalendarDataResponse")]
        MRNNexus_Model.DTO_CalendarData AddCalendarData(MRNNexus_Model.DTO_CalendarData token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/AddCalendarData", ReplyAction="http://tempuri.org/IMRNNexus_Service/AddCalendarDataResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_CalendarData> AddCalendarDataAsync(MRNNexus_Model.DTO_CalendarData token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/UpdateCalendarData", ReplyAction="http://tempuri.org/IMRNNexus_Service/UpdateCalendarDataResponse")]
        MRNNexus_Model.DTO_CalendarData UpdateCalendarData(MRNNexus_Model.DTO_CalendarData token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/UpdateCalendarData", ReplyAction="http://tempuri.org/IMRNNexus_Service/UpdateCalendarDataResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_CalendarData> UpdateCalendarDataAsync(MRNNexus_Model.DTO_CalendarData token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/GetCalendarDataByEmployeeID", ReplyAction="http://tempuri.org/IMRNNexus_Service/GetCalendarDataByEmployeeIDResponse")]
        MRNNexus_Model.DTO_CalendarData[] GetCalendarDataByEmployeeID(MRNNexus_Model.DTO_Employee token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/GetCalendarDataByEmployeeID", ReplyAction="http://tempuri.org/IMRNNexus_Service/GetCalendarDataByEmployeeIDResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_CalendarData[]> GetCalendarDataByEmployeeIDAsync(MRNNexus_Model.DTO_Employee token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/GetLeadByLeadID", ReplyAction="http://tempuri.org/IMRNNexus_Service/GetLeadByLeadIDResponse")]
        MRNNexus_Model.DTO_Lead GetLeadByLeadID(MRNNexus_Model.DTO_Lead token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/GetLeadByLeadID", ReplyAction="http://tempuri.org/IMRNNexus_Service/GetLeadByLeadIDResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_Lead> GetLeadByLeadIDAsync(MRNNexus_Model.DTO_Lead token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/AddCustomer", ReplyAction="http://tempuri.org/IMRNNexus_Service/AddCustomerResponse")]
        MRNNexus_Model.DTO_Customer AddCustomer(string[] token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/AddCustomer", ReplyAction="http://tempuri.org/IMRNNexus_Service/AddCustomerResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_Customer> AddCustomerAsync(string[] token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/GetCustomerByID", ReplyAction="http://tempuri.org/IMRNNexus_Service/GetCustomerByIDResponse")]
        MRNNexus_Model.DTO_Customer GetCustomerByID(MRNNexus_Model.DTO_Customer token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMRNNexus_Service/GetCustomerByID", ReplyAction="http://tempuri.org/IMRNNexus_Service/GetCustomerByIDResponse")]
        System.Threading.Tasks.Task<MRNNexus_Model.DTO_Customer> GetCustomerByIDAsync(MRNNexus_Model.DTO_Customer token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMRNNexus_ServiceChannel : MRNNexusTestingConsole.ServiceReference1.IMRNNexus_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MRNNexus_ServiceClient : System.ServiceModel.ClientBase<MRNNexusTestingConsole.ServiceReference1.IMRNNexus_Service>, MRNNexusTestingConsole.ServiceReference1.IMRNNexus_Service {
        
        public MRNNexus_ServiceClient() {
        }
        
        public MRNNexus_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MRNNexus_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MRNNexus_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MRNNexus_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MRNNexus_Model.DTO_Employee DoWork(MRNNexus_Model.DTO_Employee token) {
            return base.Channel.DoWork(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_Employee> DoWorkAsync(MRNNexus_Model.DTO_Employee token) {
            return base.Channel.DoWorkAsync(token);
        }
        
        public void DoMoreWork() {
            base.Channel.DoMoreWork();
        }
        
        public System.Threading.Tasks.Task DoMoreWorkAsync() {
            return base.Channel.DoMoreWorkAsync();
        }
        
        public MRNNexus_Model.DTO_Employee AddEmployee(MRNNexus_Model.DTO_Employee token) {
            return base.Channel.AddEmployee(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_Employee> AddEmployeeAsync(MRNNexus_Model.DTO_Employee token) {
            return base.Channel.AddEmployeeAsync(token);
        }
        
        public MRNNexus_Model.DTO_User RegisterUser(MRNNexus_Model.DTO_User token) {
            return base.Channel.RegisterUser(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_User> RegisterUserAsync(MRNNexus_Model.DTO_User token) {
            return base.Channel.RegisterUserAsync(token);
        }
        
        public MRNNexus_Model.DTO_Employee Login(MRNNexus_Model.DTO_User token) {
            return base.Channel.Login(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_Employee> LoginAsync(MRNNexus_Model.DTO_User token) {
            return base.Channel.LoginAsync(token);
        }
        
        public MRNNexus_Model.DTO_CalendarData AddCalendarData(MRNNexus_Model.DTO_CalendarData token) {
            return base.Channel.AddCalendarData(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_CalendarData> AddCalendarDataAsync(MRNNexus_Model.DTO_CalendarData token) {
            return base.Channel.AddCalendarDataAsync(token);
        }
        
        public MRNNexus_Model.DTO_CalendarData UpdateCalendarData(MRNNexus_Model.DTO_CalendarData token) {
            return base.Channel.UpdateCalendarData(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_CalendarData> UpdateCalendarDataAsync(MRNNexus_Model.DTO_CalendarData token) {
            return base.Channel.UpdateCalendarDataAsync(token);
        }
        
        public MRNNexus_Model.DTO_CalendarData[] GetCalendarDataByEmployeeID(MRNNexus_Model.DTO_Employee token) {
            return base.Channel.GetCalendarDataByEmployeeID(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_CalendarData[]> GetCalendarDataByEmployeeIDAsync(MRNNexus_Model.DTO_Employee token) {
            return base.Channel.GetCalendarDataByEmployeeIDAsync(token);
        }
        
        public MRNNexus_Model.DTO_Lead GetLeadByLeadID(MRNNexus_Model.DTO_Lead token) {
            return base.Channel.GetLeadByLeadID(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_Lead> GetLeadByLeadIDAsync(MRNNexus_Model.DTO_Lead token) {
            return base.Channel.GetLeadByLeadIDAsync(token);
        }
        
        public MRNNexus_Model.DTO_Customer AddCustomer(string[] token) {
            return base.Channel.AddCustomer(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_Customer> AddCustomerAsync(string[] token) {
            return base.Channel.AddCustomerAsync(token);
        }
        
        public MRNNexus_Model.DTO_Customer GetCustomerByID(MRNNexus_Model.DTO_Customer token) {
            return base.Channel.GetCustomerByID(token);
        }
        
        public System.Threading.Tasks.Task<MRNNexus_Model.DTO_Customer> GetCustomerByIDAsync(MRNNexus_Model.DTO_Customer token) {
            return base.Channel.GetCustomerByIDAsync(token);
        }
    }
}
